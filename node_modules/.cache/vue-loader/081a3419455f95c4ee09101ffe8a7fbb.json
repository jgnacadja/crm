{"remainingRequest":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jr/devspace/ModuleSimpleCRM/src/components/gantt.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jr/devspace/ModuleSimpleCRM/src/components/gantt.vue","mtime":1643813775652},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1643224169106},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1643224169006},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1643224169106},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1643224172087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["gantt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"gantt.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"gantt\">\n    <b-loading\n      :is-full-page=\"isFullPage\"\n      v-model=\"isLoading\"\n      :can-cancel=\"true\"\n    ></b-loading>\n    <div class=\"column is-12\">\n      <div class=\"columns multiline px-6 py-2\">\n        <div class=\"column is-12-touch\">\n          <div class=\"columns is-vcentered is-left has-text-left is-mobile\">\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label pt-2\">Affichage : &nbsp;</label>\n                <div class=\"control\">\n                  <div class=\"dropdown\" v-bind:class=\"showing\">\n                    <div class=\"dropdown-trigger\">\n                      <button\n                        class=\"button\"\n                        aria-haspopup=\"true\"\n                        aria-controls=\"dropdown-menu\"\n                        @click=\"show\"\n                      >\n                        <span class=\"icon-text\">\n                          <span class=\"icon\">\n                            <em\n                              class=\"fas fa-circle\"\n                              v-bind:style=\"{ color: typeview.color }\"\n                            ></em>\n                          </span>\n                          <span>{{ typeview.title }}</span>\n                        </span>\n                        <span class=\"icon is-small\">\n                          <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                        </span>\n                      </button>\n                    </div>\n                    <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                      <div class=\"dropdown-content\">\n                        <a\n                          class=\"dropdown-item\"\n                          v-for=\"(item, i) in arrayFilter\"\n                          :key=\"i\"\n                          :value=\"item.title\"\n                          @click=\"setView(item)\"\n                        >\n                          <span class=\"icon-text\">\n                            <span\n                              class=\"icon\"\n                              v-bind:style=\"{ color: item.color }\"\n                            >\n                              <em class=\"fas fa-circle\"></em>\n                            </span>\n                            <span>{{ item.title }}</span>\n                          </span>\n                        </a>\n                        <hr class=\"dropdown-divider\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label pt-2\">Utilisateurs : &nbsp;</label>\n                <div class=\"control\">\n                  <div class=\"select\">\n                    <multiselect\n                      v-model=\"selectedUsers\"\n                      :options=\"users\"\n                      :multiple=\"true\"\n                      :close-on-select=\"false\"\n                      :clear-on-select=\"false\"\n                      :preserve-search=\"true\"\n                      placeholder=\"Selectionnez\"\n                      label=\"name\"\n                      track-by=\"name\"\n                      :preselect-first=\"true\"\n                      @close=\"dispatchAction\"\n                    >\n                      <template slot=\"selection\" slot-scope=\"{ values, isOpen }\"\n                        ><span\n                          class=\"multiselect__single\"\n                          v-if=\"values.length &amp;&amp; !isOpen\"\n                          >{{ values.length }} selections</span\n                        ></template\n                      >\n                    </multiselect>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <div class=\"control\">\n                  <div class=\"select\">\n                    <select v-model=\"month_selected\" @change=\"updateStartDate\">\n                      <option\n                        v-for=\"(option, index) in months\"\n                        :value=\"option\"\n                        :key=\"index\"\n                      >\n                        {{ option }}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <div class=\"control\">\n                  <div class=\"select\">\n                    <select v-model=\"year_selected\" @change=\"updateStartDate\">\n                      <option\n                        v-for=\"year in [\n                          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n                          16, 17, 18, 19,\n                        ]\"\n                        :value=\"currentYear - year\"\n                        :key=\"year\"\n                      >\n                        {{ currentYear - year }}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <DayPilotGantt id=\"dp\" :config=\"config\" ref=\"gantt\" />\n  </section>\n</template>\n\n<script>\nimport { DayPilot, DayPilotGantt } from \"daypilot-pro-vue\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Multiselect from \"vue-multiselect\";\nimport \"vue-multiselect/dist/vue-multiselect.min.css\";\n\nexport default {\n  name: \"Gantt\",\n  props: {\n    API_KEY: {\n      type: String,\n      default() {\n        return \"\";\n      },\n    },\n\n    URI: {\n      type: String,\n      default() {\n        return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interactions/\";\n      },\n    },\n\n    URI_ACTION: {\n      type: String,\n      default() {\n        return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interaction/\";\n      },\n    },\n\n    dataList: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n\n    USER_API: {\n      type: String,\n      default() {\n        return \"https://0002-zebridge-dev-externe.api.crm-simple.com/utilisateurs/\";\n      },\n    },\n    arrayFilter: {\n      type: Array,\n      default() {\n        return [\n          {\n            color: \"#2251ff\",\n            title: \"Défaut\",\n            index: \"color_defaut\",\n          },\n          {\n            color: \"#ffcedf0\",\n            title: \"Etat\",\n            index: \"color_etat\",\n          },\n          {\n            color: \"#25ffcd\",\n            title: \"Priorité\",\n            index: \"color_priorite\",\n          },\n          {\n            color: \"#de452a\",\n            title: \"Utilisateur\",\n            index: \"color_utilisateur\",\n          },\n          {\n            color: \"#cdee00\",\n            title: \"Type\",\n            index: \"color_type\",\n          },\n          {\n            color: \"#e19400\",\n            title: \"Priorité échéance\",\n            index: \"color_priorite_echeance\",\n          },\n        ];\n      },\n    },\n    idUtilisateurs: {\n      type: Array,\n      default() {\n        return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n      },\n    },\n    idprojets: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    idcontacts: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    idsocietes: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n\n    months: {\n      type: Array,\n      default() {\n        return [\n          \"Janvier\",\n          \"Février\",\n          \"Mars\",\n          \"Avril\",\n          \"Mai\",\n          \"Juin\",\n          \"Juillet\",\n          \"Août\",\n          \"Septembre\",\n          \"Octobre\",\n          \"Novembre\",\n          \"Décembre\",\n        ];\n      },\n    },\n\n    month_selected_number: {\n      type: Number,\n      default() {\n        return new Date().getMonth();\n      },\n    },\n\n    month_selected: {\n      type: String,\n      default() {\n        return this.months[this.month_selected_number];\n      },\n    },\n\n    year_selected: {\n      type: Number,\n      default() {\n        return new Date().getFullYear();\n      },\n    },\n  },\n  data() {\n    return {\n      isFullPage: false,\n      isLoading: true,\n      startDate: \"\",\n      endDate: \"\",\n      config: {\n        cellWidthSpec: \"Fixed\",\n        cellWidth: 40,\n        timeHeaders: [\n          { groupBy: \"Month\", format: \"MMMM yyyy\" },\n          { groupBy: \"Week\" },\n          { groupBy: \"Day\", format: \"d\" },\n        ],\n        scale: \"Day\",\n        days: DayPilot.Date.today().daysInYear(),\n        startDate: DayPilot.Date.today().firstDayOfMonth(),\n        rowHeaderHideIconEnabled: false,\n        events: null,\n        row: {\n          bubbleHtml: \"Row bubble\",\n        },\n        columns: [\n          {\n            title: \"Liste des tâches\",\n            width: 50,\n            property: \"text\",\n          },\n        ],\n        locale: \"fr-fr\",\n        rowMoveHandling: \"Disabled\",\n        onRowMoved: (args) => {\n          var data = {};\n\n          var config = {\n            method: \"put\",\n            url: this.URI_ACTION + this.API_KEY,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n          if (args.position === \"child\") {\n            data = JSON.stringify({\n              idaction: args.kf.data.task.id,\n              idaction_parent: args.lf.data.task.id,\n            });\n\n            config.data = data;\n            axios(config).then(() => {\n              this.gantt.tasks.update(args.e);\n            });\n          } else {\n            data = JSON.stringify({\n              idaction: args.kf.data.task.id,\n              idaction_parent: null,\n            });\n\n            config.data = data;\n            axios(config).then(() => {\n              this.gantt.tasks.update(args.e);\n            });\n          }\n        },\n        taskMoveHandling: \"Update\",\n        onTaskResized: (args) => {\n          this.updateTask(args);\n        },\n        onTaskMoved: (args) => {\n          this.updateTask(args);\n        },\n        linkCreateHandling: \"Update\",\n        onLinkCreated: (args) => {\n          console.log(\"onLinkCreated\", args);\n\n          var data = {};\n\n          var config = {\n            method: \"put\",\n            url: this.URI_ACTION + this.API_KEY,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n\n          let to_Start_date = args.target.start().value;\n          let from_start_date = args.source.start().value;\n\n          config.data = data;\n          if (moment(to_Start_date).isSameOrAfter(from_start_date)) {\n            data = JSON.stringify({\n              idaction: args.to,\n              idaction_parent: args.from,\n            });\n\n            axios(config).then(() => {\n              this.gantt.tasks.update(args.e);\n            });\n          } else {\n            // unlink\n            let findLink = this.gantt.links.findByFromTo(args.from, args.to);\n            if (findLink) this.gantt.links.remove(findLink);\n          }\n        },\n        rowCreateHandling: \"Enabled\",\n        onRowCreate: (args) => {\n          console.log(\"onRowCreate\", args);\n          var ef = this;\n          var today = new Date();\n          //format date to YYYY-MM-dd hh:mm:ss\n          var date =\n            today.getFullYear() +\n            \"-\" +\n            (today.getMonth() + 1) +\n            \"-\" +\n            today.getDate() +\n            \" \" +\n            today.getHours() +\n            \":\" +\n            today.getMinutes() +\n            \":\" +\n            today.getSeconds();\n\n          // format date from 2022-1-1 to 2022-01-01 with moment\n          date = moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n\n          var data = JSON.stringify({\n            sujet: args.text,\n            date_action: date,\n            color: \"#9e5fff\",\n            duree_heures: \"24\",\n            duree_minutes: \"00\",\n          });\n\n          var config = {\n            method: \"post\",\n            url: this.URI_ACTION + this.API_KEY,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            data: data,\n          };\n          axios(config).then(function (response) {\n            ef.gantt.tasks.add({\n              id: DayPilot.guid(),\n              text: args.text,\n              start: new DayPilot.Date().getDatePart(),\n              end: new DayPilot.Date().getDatePart().addDays(1),\n              idaction: response.data.idaction,\n            });\n          });\n        },\n      },\n      locale: \"fr-FR\",\n      currentYear: \"\",\n      gantt: null,\n      users: [],\n      selectedUsers: [],\n      CscheduleList: [],\n      showing: \"\",\n      typeview: {\n        title: \"Selectionnez\",\n        color: \"#2251ff\",\n        index: \"color_defaut\",\n      },\n    };\n  },\n  components: {\n    DayPilotGantt,\n    Multiselect,\n  },\n  methods: {\n    show() {\n      this.showing = this.showing.length === 0 ? \"is-active\" : \"\";\n    },\n\n    setView(type) {\n      this.typeview = type;\n      this.show();\n      this.dispatchAction();\n    },\n    setColor(type, data) {\n      let color = type.color;\n      try {\n        const jsondata = data.color.value;\n        color = JSON.parse(jsondata)[type.index];\n      } catch (error) {\n        console.log(\"undefined color data\");\n      }\n\n      return color;\n    },\n    isUserSelected(idUser) {\n      return this.idUtilisateurs.find(idUser) > 0;\n    },\n    async loadUsers() {\n      await axios({\n        method: \"get\",\n        url: this.USER_API + this.API_KEY,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          if (response.data.result === 1) {\n            this.users = response.data.data.map((el) => {\n              return {\n                id: el.idutilisateur.value.toString(),\n                name: el.nom_utilisateur.value.toString(),\n              };\n            });\n            this.selectedUsers = this.users.filter(\n              (x) => x.id in this.idUtilisateurs\n            );\n          } else {\n            console.log(response.data.err_message);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    generateQueryFor(dataArray, dataParam, result) {\n      if (dataArray.length > 0) {\n        result = result.concat(\n          result.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(dataArray, dataParam)\n        );\n      }\n      return result;\n    },\n    setRenderRangeText() {\n      let index = (this.months.indexOf(this.month_selected) + 1).toLocaleString(\n        \"en-US\",\n        { minimumIntegerDigits: 2, useGrouping: false }\n      );\n\n      this.startDate = this.year_selected + \"-\" + index + \"-01\";\n\n      this.endDate = this.year_selected + \"-\" + index + \"-31\";\n    },\n    getQueryParam() {\n      /**\n       *@param none\n       *@author Jacques\n       *@Resume : figure out  filter on API request\n       *@example : condition:idutilisateur:egal:1:OR:idutilisateur:egal:4:separator:AND:condition:idprojet:egal:1:OR:idprojet:egal:4060:separator:AND:condition:idsociete:egal:4:OR:idsociete:egal:2234\n       **/\n\n      let filter = \"\";\n      // filtering users\n      if (this.selectedUsers.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(\n            this.selectedUsers.map((e) => {\n              return e.id;\n            }),\n            \"idutilisateur\"\n          )\n        );\n      }\n\n      // idprojet\n      if (this.idprojets.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(this.idprojets, \"idprojet\")\n        );\n      }\n\n      // idcontact\n      if (this.idcontacts.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(this.idcontacts, \"idcontact\")\n        );\n      }\n\n      // idsociete\n      if (this.idsocietes.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(this.idsocietes, \"idsociete\")\n        );\n      }\n\n      // Setting condition on Dates\n\n      filter = filter.concat(\n        filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n        \"date_action:biggerthanoregal:\" +\n          this.startDate +\n          \":AND:date_action:lowerthanoregal:\" +\n          this.endDate\n      );\n\n      return filter;\n    },\n    setfilter(listArray, param) {\n      if (listArray.length === 1) {\n        return param + \":egal:\" + listArray[0];\n      } else {\n        return (\n          param +\n          \":egal:\" +\n          listArray[0] +\n          \":OR:\" +\n          this.setfilter(listArray.slice(1), param)\n        );\n      }\n    },\n    dispatchAction() {\n      this.isLoading = true;\n      this.loadTasks(0).then((items) => {\n        // init customTasks variable\n        let tasksList = [];\n\n        // change all items with idaction_parent equal to 0 to null\n        tasksList = items.slice(0, items.length - 1).map((item) => {\n          item.color = this.typeview.color;\n          item.bgColor = this.typeview.color;\n\n          if (item.idaction_parent === 0) {\n            item.idaction_parent = \"\";\n          }\n          return item;\n        });\n\n        let tasks = tasksList;\n        // load links\n        let links = this.loadLinks(tasksList);\n\n        this.CscheduleList = tasks;\n\n        // create gantt with tasks\n        this.gantt.update({ tasks: tasksList });\n\n        // create links\n        this.gantt.update({ links: links });\n\n        this.isLoading = false;\n      });\n    },\n    async loadTasks(nbPage = 0, onDueDate = false) {\n      return axios({\n        method: \"get\",\n        url:\n          this.URI +\n          this.API_KEY +\n          \"/\" +\n          this.getQueryParam(onDueDate ? \"date_echeance\" : \"date_action\") +\n          \"/\" +\n          nbPage,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          if (response.data.data.length > 0) {\n            let result = response.data.data.map((e) => {\n              return {\n                start: e.date_action.value,\n                end: e.date_fin.value,\n                text: e.sujet.value,\n                id: e.idaction.value.toString(),\n                complete: 0,\n                idaction_parent: e.idaction_parent,\n                box: {\n                  backColor: \"#e8eef7\",\n                  barBackColor:\n                    onDueDate && this.typeview.index != \"color_priorite\"\n                      ? \"#f2a640\"\n                      : this.setColor(this.typeview, e),\n                },\n              };\n            });\n            return Promise.all([\n              ...result,\n              this.loadTasks(++nbPage, onDueDate),\n            ]);\n          } else {\n            return [];\n          }\n        })\n        .catch(() => {\n          return [];\n        });\n    },\n    loadLinks(hierachiralTreeArray) {\n      let tree = hierachiralTreeArray;\n      let item;\n      let i;\n      let len;\n      let id;\n      let parent;\n      let links = [];\n\n      // build links\n      for (i = 0, len = tree.length; i < len; i++) {\n        item = tree[i];\n        id = item.id;\n        parent = item.idaction_parent.value;\n        if (parent) {\n          // lookup index of parent\n          let parent_object = tree.find((e) => {\n            return e.id === parent;\n          });\n\n          if (parent_object) {\n            // set position by date start end\n            if (moment(parent_object.start).isBefore(item.start)) {\n              links.push({\n                from: parent,\n                to: id,\n                type: \"FinishToStart\",\n              });\n            } else if (moment(parent_object.end).isAfter(item.end)) {\n              links.push({\n                from: parent,\n                to: id,\n                type: \"StartToStart\",\n              });\n            } else {\n              links.push({\n                from: parent,\n                to: id,\n                type: \"FinishToFinish\",\n              });\n            }\n          }\n        }\n      }\n      return links;\n    },\n    updateStartDate() {\n      let index = (this.months.indexOf(this.month_selected) + 1).toLocaleString(\n        \"en-US\",\n        { minimumIntegerDigits: 2, useGrouping: false }\n      );\n      this.config.startDate = this.year_selected + \"-\" + index + \"-01\";\n      // this.startDate = this.year_selected + \"-\" + index + \"-01\";\n      this.setRenderRangeText();\n\n      this.dispatchAction();\n    },\n    hierachiralTreeArray(array) {\n      let tree = [];\n      let lookup = {};\n      let items;\n      let item;\n      let i;\n      let len;\n      // eslint-disable-next-line no-unused-vars\n      let parent;\n\n      items = array;\n      for (i = 0, len = items.length; i < len; i++) {\n        item = items[i];\n        lookup[item.id] = item;\n        parent = lookup[item.idaction_parent.value];\n        item.children = [];\n      }\n\n      for (i = 0, len = items.length; i < len; i++) {\n        item = items[i];\n        parent = lookup[item.idaction_parent.value];\n        if (parent) {\n          parent.children.push(item);\n        } else {\n          tree.push(item);\n        }\n      }\n\n      for (i = 0, len = tree.length; i < len; i++) {\n        item = tree[i];\n        if (item.children.length === 0) {\n          delete item.children;\n        }\n      }\n      return tree;\n    },\n    updateTask(args) {\n      var ef = this;\n      var date = new Date(args.newStart).toISOString();\n      date = date.replace(\"T\", \" \");\n      date = date.split(\".\")[0];\n      var fin = new Date(args.newEnd);\n\n      var debut = new Date(args.newStart);\n\n      const time_difference = fin.getTime() - debut.getTime();\n      const hours = Math.floor(time_difference / (1000 * 60 * 60));\n      const remaining_milliseconds = time_difference % (1000 * 60 * 60);\n      const minutes = Math.floor(remaining_milliseconds / (1000 * 60));\n\n      var data = JSON.stringify({\n        idaction: args.task.data.id,\n        date_action: date,\n        duree_heures: hours,\n        duree_minutes: minutes,\n      });\n\n      var config = {\n        method: \"put\",\n        url: this.URI_ACTION + this.API_KEY,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n      axios(config).then(function () {\n        ef.gantt.tasks.update(args.e);\n      });\n    },\n  },\n  async mounted() {\n    this.setRenderRangeText();\n    this.gantt = this.$refs.gantt.control;\n    this.month_selected_number = new Date().getMonth();\n    this.month_selected = this.months[this.month_selected_number];\n    this.year_selected = new Date().getFullYear();\n    this.currentYear = this.year_selected;\n\n    await this.loadUsers(); // loading users list\n    this.dispatchAction();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/variables.scss\";\n</style>\n"]}]}