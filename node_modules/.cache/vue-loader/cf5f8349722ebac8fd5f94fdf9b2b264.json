{"remainingRequest":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jr/devspace/ModuleSimpleCRM/src/components/agenda.vue?vue&type=template&id=1371001c&scoped=true&","dependencies":[{"path":"/home/jr/devspace/ModuleSimpleCRM/src/components/agenda.vue","mtime":1643965325296},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1646318694864},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644318271880},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1646318694864},{"path":"/home/jr/devspace/ModuleSimpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1644318271880}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}