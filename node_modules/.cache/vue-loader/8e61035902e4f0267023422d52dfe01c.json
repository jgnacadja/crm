{"remainingRequest":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jr/devspace/simpleCRM/src/components/SchedulerKanban.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jr/devspace/simpleCRM/src/components/SchedulerKanban.vue","mtime":1643813775648},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1643224171816},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643224172087},{"path":"/home/jr/devspace/simpleCRM/node_modules/postcss-loader/src/index.js","mtime":1643224172084},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1643224169106},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1643224172087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWFpbl9rYW5iYW5fZGF5cGlsb3QgewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KLmFkZC1idXR0b24gewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7CiAgICBjb2xvcjogIzY2NjsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGxpbmUtaGVpZ2h0OiAzMHB4OwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQouYWRkLWJ1dHRvbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkOwp9Cg=="},{"version":3,"sources":["SchedulerKanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+vBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SchedulerKanban.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"main_kanban_daypilot\">\n    <b-loading\n      :is-full-page=\"isFullPage\"\n      v-model=\"isLoading\"\n      :can-cancel=\"true\">\n    </b-loading>\n    <div class=\"column is-12\">\n      <div class=\"columns multiline px-6 py-2\">\n        <div class=\"column is-12-touch \">\n          <div class=\"columns is-vcentered is-justify-content-flex-start is-left has-text-left is-desktop\">\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label is-flex-tablet-only is-justify-content-space-between pt-2\">\n                  Rubrique <span class=\"is-hidden-desktop\">&nbsp;</span> : &nbsp;\n                </label>\n                <div class=\"control is-flex-grow-2\">\n                  <div class=\"dropdown is-block is-fullwidth\" v-bind:class=\"showingItems\">\n                    <div class=\"dropdown-trigger\">\n                      <button class=\"button is-fullwidth is-justify-content-space-between\" aria-haspopup=\"true\" \n                              aria-controls=\"dropdown-menu\" @click=\"show('items',showingItems)\">\n                        <span class=\"icon-text\">\n                          <span>{{itemSelected.rubrique}}</span>\n                        </span>\n                        <span class=\"icon is-small\">\n                          <span class=\"fas fa-angle-down\" aria-hidden=\"true\"></span>\n                        </span>\n                      </button>\n                    </div>\n                    <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                      <div class=\"dropdown-content\">\n                        <a class=\"dropdown-item\" v-for=\"(item, i) in itemsList\" :key=\"i\" :value=\"item.rubrique\" \n                            @click=\"getItemColumns(item)\">\n                          <span class=\"icon-text\">\n                            <span>{{ item.rubrique }}</span>\n                          </span>\n                        </a>\n                        <hr class=\"dropdown-divider\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label is-flex-tablet-only is-justify-content-space-between pt-2\">\n                  Affichage <span class=\"is-hidden-desktop\">&nbsp;</span> : &nbsp;\n                </label>\n                <div class=\"control is-flex-grow-2\">\n                  <div class=\"dropdown is-block is-fullwidth\" v-bind:class=\"showing\">\n                    <div class=\"dropdown-trigger\">\n                      <button class=\"button is-fullwidth is-justify-content-space-between\" aria-haspopup=\"true\" \n                              aria-controls=\"dropdown-menu\" @click=\"show('users',showing)\">\n                        <span class=\"icon-text\">\n                          <span class=\"icon\">\n                            <span class=\"fas fa-circle\" v-bind:style=\"{ color: typeview.color }\"></span>\n                          </span>\n                          <span>{{typeview.title}}</span>\n                        </span>\n                        <span class=\"icon is-small\">\n                          <span class=\"fas fa-angle-down\" aria-hidden=\"true\"></span>\n                        </span>\n                      </button>\n                    </div>\n                    <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                      <div class=\"dropdown-content\">\n                        <a class=\"dropdown-item\" v-for=\"(item, i) in arrayFilter\" :key=\"i\" :value=\"item.title\" \n                            @click=\"setView(item)\">\n                          <span class=\"icon-text is-flex is-flex-wrap-nowrap\">\n                            <span class=\"icon\" v-bind:style=\"{ color: item.color }\">\n                              <span class=\"fas fa-circle\"></span>\n                            </span>\n                            <span>{{ item.title }}</span>\n                          </span>\n                        </a>\n                        <hr class=\"dropdown-divider\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label is-flex-tablet-only is-justify-content-space-between pt-2\">\n                  Utilisateur <span class=\"is-hidden-desktop\">&nbsp;</span> : &nbsp;\n                </label>\n                <div class=\"control is-flex-grow-2\">\n                  <div class=\"select is-block\">\n                    <Multiselect\n                    v-model=\"user\" :options=\"allUsers\" :multiple=\"true\"\n                    :close-on-select=\"false\" :clear-on-select=\"false\"\n                    :preserve-search=\"true\"\n                    placeholder=\"Selectionnez\" label=\"name\" \n                    track-by=\"name\" :preselect-first=\"true\"\n                    @close=\"onFilter\">\n                    <template\n                      slot=\"selection\"\n                      slot-scope=\"{ values, isOpen }\">\n                      <span class=\"multiselect__single\" v-if=\"values.length &amp;&amp; !isOpen\">\n                        {{ values.length }} selections\n                      </span>\n                    </template>\n                  </Multiselect>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <DayPilotKanban id=\"dp\" :config=\"config\" ref=\"kanban\" />\n  </section>\n</template>\n  \n<script>\n  import { DayPilotKanban, DayPilot } from \"daypilot-pro-vue\";\n  import Vue from \"vue\";\n  import Multiselect from \"vue-multiselect\";\n  // import \"vue-multiselect/dist/vue-multiselect.min.css\";\n  import axios from \"axios\";\n  \n  export default {\n    name: \"SchedulerKanban\",\n    props: {\n      API_KEY: {\n        type: String,\n        default() {\n          return \"\";\n        },\n      },\n      ID_USER: {\n        type: String,\n        default() {\n          return 1;\n        },\n      },\n      URI: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interactions/\";\n        },\n      },\n      URI_ACTION: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interaction/\";\n        },\n      },\n      URI_ITEMS: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/actionrubriques/\";\n        },\n      },\n      URI_ACTIONTYPES: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/actiontypes/\";\n        },\n      },\n      idUtilisateurs: {\n        type: Array,\n        default() {\n          return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n        },\n      },\n    },\n    data: function () {\n      return {\n        isFullPage: false,\n        isLoading: true,\n        itemSelected : {},\n        user : [],\n        lock : \"alllock\",\n        type : \"alltype\",\n        priority : \"allpriority\",\n        steps: [],\n        allUsers: [],\n        tasks: [],\n        showing: \"\",\n        showingItems: \"\",\n        typeview:{\n          title : \"Selectionnez\", \n          color: \"#2251ff\",\n          index: \"color_defaut\",\n        },\n        itemsList : [],\n        columnList : [],\n        arrayFilter : [\n            {\n              color: \"#2251ff\",\n              title: \"Défaut\",\n              index: \"color_defaut\",\n            },\n            {\n              color: \"#F54D40\",\n              title: \"Etat\",\n              index: \"color_etat\",\n            },\n            {\n              color: \"#25ffcd\",\n              title: \"Priorité\",\n              index: \"color_priorite\",\n            },\n            {\n              color: \"#de452a\",\n              title: \"Utilisateur\",\n              index: \"color_utilisateur\",\n            },\n            {\n              color: \"#cdee00\",\n              title: \"Type\",\n              index: \"color_type\",\n            },\n            {\n              color: \"#e19400\",\n              title: \"Priorité échéance\",\n              index: \"color_priorite_echeance\",\n            },\n        ],\n        config: {\n          columnWidthSpec: \"Auto\",\n          swimlaneMoveHandling: \"Disabled\",\n          // onSwimlaneMoved: (args) => {\n          //   args.control.message(\"Swimlane moved: \" + args.swimlane.data.name);\n          // },\n          cardDeleteHandling: \"Disabled\",\n          cardMoveHandling: \"Enabled\",\n          onCardMoved: (args) => {\n            console.log(\"args\", args);\n            this.updateCalendar(args.card.data, args.card.control.cards)\n            // args.control.message(\"Card moved: \" + args.card.data.name);\n          },\n          onBeforeCellRender : (args) => {\n            if(args.cell.swimlane.data.id === this.ID_USER){\n              args.cell.areas =[ {\n                right: 5,\n                bottom: 5,\n                width: 100,\n                height: 30,\n                html: \"Ajouter\",\n                cssClass: \"add-button\",\n                action: \"JavaScript\", js: async(args)=> {\n                  console.log(\"ON BUTTON \", args);\n                  this.createNewTasks(args,\"add-button\");\n                }\n              }]\n            }\n          },\n          cardRightClickHandling: \"Disabled\",\n          onCardClick: async (args) => {\n            console.log(\"CARDS : \", args);\n            if((args.card.data.lock!==\"1\") && (args.card.data.swimlane===this.ID_USER)){\n              const modal = await DayPilot.Modal.prompt(\n                \"Modifier le titre de la tâche: \",args.card.data.text\n              );\n              let name=modal.result;\n              if (!name) {return;}\n              args.card.data.text = modal.result;\n              this.updateCalendar(args.card.data, args.card.control.cards)\n            }\n          },\n          // contextMenuCard: new DayPilot.Menu({\n          //   items: [\n          //     {\n          //       text: \"Verrouiller la tâche\",\n          //       icon: \"fas fa-lock\",\n          //       onClick: (args) => {\n          //         let e = args.source;\n          //         e.data.lock = \"1\";\n          //         e.data.areas[0].icon = \"fas fa-lock\";\n          //         console.log(\"LOCKED : \", e.data);\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //     {\n          //       text: \"Supprimer\",\n          //       icon: \"fas fa-trash\",\n          //       onClick: (args) => {\n          //         const dp = args.source.control;\n          //         let idaction = args.source.data.idaction;\n          //         let config = {\n          //           method: \"delete\",\n          //           url: this.URI_ACTION + this.API_KEY + \"/\" + idaction,\n          //           headers: {},\n          //         };\n          //         axios(config)\n          //           .then(function () {\n          //             dp.cards.remove(args.source);\n          //           })\n          //           .catch(function (error) {\n          //             console.log(\"Error ON DELETE : \", error);\n          //           });\n          //       },\n          //     },\n          //     {\n          //       text: \"Private\",\n          //       icon: \"icon icon-private\",\n          //       color: \"#9e5fff\",\n          //       onClick: (args) => {\n          //         let e = args.source;\n          //         e.data.barColor = \"#9e5fff\";\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //     {\n          //       text: \"Company\",\n          //       icon: \"icon icon-company\",\n          //       color: \"#00a9ff\",\n          //       onClick:  (args) => {\n          //         let e = args.source;\n          //         e.data.barColor = \"#00a9ff\";\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //     {\n          //       text: \"DéVerrouiller la tâche\",\n          //       icon: \"fas fa-lock-open\",\n          //       onClick: (args) => {\n          //         let e = args.source;\n          //         e.data.lock = \"0\";\n          //         e.data.areas[0].icon = \"fas fa-chevron-down\";\n          //         console.log(\"LOCKED : \", e.data);\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //   ],\n          //   onShow: function (args) {\n          //     if (parseInt(args.source.data.lock) === 1) {\n          //       args.menu.items[0].hidden = true;\n          //       args.menu.items[4].hidden = false;\n          //       args.menu.items.forEach(element => {\n          //         element.disabled = true;\n          //       });\n          //       args.menu.items[4].disabled = false;\n          //     } \n          //     else {\n          //       args.menu.items[0].hidden = false;\n          //       args.menu.items.forEach(element => {\n          //         element.disabled = false;\n          //       });\n          //       args.menu.items[4].hidden = true;\n          //     }\n          //   },\n          // }),\n        },\n      };\n    },\n    components: {\n      DayPilotKanban,\n      Multiselect\n    },\n    computed: {\n      // DayPilot.Kanban object - https://api.daypilot.org/daypilot-kanban-class/\n      kanban: function () {\n        return this.$refs.kanban.control;\n      },\n    },\n    methods: {\n      async getAllUsers(nombre_page=0) {\n        let vm = this;\n        return axios({\n          method: \"get\",\n          url: \"https://0002-zebridge-dev-externe.api.crm-simple.com/utilisateurs/\"+ this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then(function (response) {\n            let allUsers = response.data.data;\n            console.log(\"USERS : \", response);\n            // console.log(\"ID USER: \", vm.ID_USER);\n            allUsers.forEach(element => {\n              vm.allUsers.push({\n                name: element.nom_utilisateur.value,\n                id: element.idutilisateur.value,\n              });\n            });\n            vm.user = vm.allUsers.filter((x) => x.id in vm.idUtilisateurs );\n            nombre_page++;\n            if (nombre_page >= response.data.nbpage) {\n              this.getAllUsers(nombre_page);\n            }\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET ALL USERS: \", error);\n            return [];\n          });\n      },\n      compare( a, b ) {\n        if ( a.rubrique < b.rubrique ){\n          return -1;\n        }\n        if ( a.rubrique > b.rubrique ){\n          return 1;\n        }\n        return 0;\n      },\n      async getItemsList(nombre_page=0) {\n        return axios({\n          method: \"get\",\n          url: this.URI_ITEMS+ this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((response) => {\n            let items = response.data.data;\n            items.forEach(element => {\n              this.itemsList.push({\n                id : element.idrubrique, \n                rubrique : element.rubrique, \n              });\n            });\n            nombre_page++;\n            if(nombre_page < response.data.nbpage){\n              this.getItemsList(nombre_page);\n            }\n            else{\n              this.itemsList.sort( this.compare );\n              this.getItemColumns(this.itemsList[0]);\n            }\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET ALL ITEMS: \", error);\n            return [];\n          });\n      },\n      async getItemColumns(item,nombre_page=0) {\n        this.isLoading=true;\n        this.itemSelected = item;\n        this.columnList=[];\n        let id = item.id\n        console.log(\"Id :\", id);\n        return axios({\n          method: \"get\",\n          url: this.URI_ACTIONTYPES+this.API_KEY+\"/condition:idrubrique:egal:\"+id,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((response) => {\n            let data = response.data.data;\n            console.log(\"RESPONSE COLUMN A : \", response)\n            // let newColumns = [];\n            data.forEach(element => {\n              this.columnList.push({\n                id : element.idaction_type, \n                name : element.action_type, \n              });\n            });\n            nombre_page++;\n            console.log(\"COLUMN LIST\", this.columnList);\n            nombre_page >= response.data.nbpage ? this.showingItems=\"\": this.getItemColumns(item,nombre_page);\n            this.isLoading=false;\n            this.columnList=this.addCreateButton(this.columnList);\n            this.kanban.columns.list = this.columnList;\n            Vue.set(this.config, \"columns\", this.columnList);\n            this.loadSwimlane();\n            this.loadCards();\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET ALL ACTIONS TYPE: \", error);\n            return [];\n          });\n      },\n      async getKanbanItem(url=this.URI + this.API_KEY, nombre_page=0) {\n        let vm = this;\n        vm.tasks= nombre_page===0 ? [] : vm.tasks;\n        console.log(\"nombre_page \", nombre_page);\n        return axios({\n          method: \"get\",\n          url: url+\"/\"+nombre_page,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then(function (response) {\n            let tasks = response.data.data;\n            console.log(\"TASK 1.0 \", response);\n            let index = vm.tasks.length+1;\n            let groupBy = function (xs) {\n              return xs.reduce(function (rv, x) {\n                (rv[x.idutilisateur.value] =\n                  rv[x.idutilisateur.value] || []).push(x);\n                return rv;\n              }, {});\n            };\n            let taskByID = groupBy(tasks);\n            let newEvents = [];\n            for (const [key] of Object.entries(taskByID)) {\n              newEvents.push({\n                id: `${key}`,\n                tasks: taskByID[`${key}`],\n              });\n            }\n            newEvents.forEach((element) => {\n              element.tasks.forEach((task) => {\n                vm.tasks.push({\n                  idaction: task.idaction.value,\n                  id: index,\n                  name: \"\",\n                  text: task.sujet.value,\n                  swimlane: element.id,\n                  start: task.date_action.value,\n                  end: task.date_fin.value,\n                  column: task.idtype_action.value,\n                  lock: task.e_lock.value,\n                  barColor:vm.setColor(vm.typeview, task),\n                  priority :task.priorite.value,\n                  areas: [\n                    {\n                      right: 0,\n                      top: 6,\n                      width: 20,\n                      height: 20,\n                      icon: \"fas fa-info-circle\",\n                      style: \"text-align:center; color:#2251ff\",\n                      action :\"Bubble\",\n                      bubble: new DayPilot.Bubble({\n                        onLoad: (args) => {\n                          let idaction = args.source.data.card.idaction;\n                          let start = \"\";\n                          let end = \"\";\n                          start = args.source.data.card.start;\n                          start = start.split(\" \");\n                          let new_date = start[0].split(\"-\");\n                          start[0] = new_date[2] + \"-\" + new_date[1] + \"-\" + new_date[0];\n                          var new_end = start[1].split(\":\");\n                          start[1] = new_end[0] + \":\" + new_end[1];\n                          end = args.source.data.card.end;\n                          end = end.split(\" \");\n                          new_date = end[0].split(\"-\");\n                          end[0] = new_date[2] + \"-\" + new_date[1] + \"-\" + new_date[0];\n                          new_end = end[1].split(\":\");\n                          end[1] = new_end[0] + \":\" + new_end[1];\n                          // if event object doesn't specify \"bubbleHtml\" property\n                          // this onLoad handler will be called to provide the bubble HTML\n                          args.html =\n                            \"<span style='font-weight: 900'>\" +args.source.data.card.text +\"</span></br>\" +\n                            \"Début: \" +start[0] +\" à \" +start[1] +\"</br>\" +\n                            \"Fin: \" +end[0] +\" à \" + end[1] +\"</br>\" +\n                            \"<a href='https://0002-zebridge-dev-externe.crm-simple.com/action_edit.php?idaction=\" +\n                            idaction +\"'target='_blank'rel='noopener' >Voir plus</a>\";\n                        },\n                      }),\n                    },\n                  ],\n                });\n                //CHANGE ICON FOr  LOCKED EVENTS\n                // if (parseInt(vm.tasks[index-1].lock) === 1) {\n                //   vm.tasks[index-1].areas[0].icon =\"fas fa-lock\";\n                // }\n                index++;\n              });\n            });\n            console.log(\"TASKS 2.0 : \", vm.tasks);\n            nombre_page++;\n            if(nombre_page < response.data.nbpage){\n              vm.getKanbanItem(vm.URI + vm.API_KEY,nombre_page);\n            }\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET: \", error);\n            return [];\n          });\n      },\n      loadCards() {\n        Vue.set(this.config, \"cards\", this.tasks);\n      },\n      loadColumns() {\n        this.columnList = this.addCreateButton(this.columnList);\n        Vue.set(this.config, \"columns\", this.columnList);\n      },\n      async createNewTasks(args, type){\n        console.log(\"RUN THROUGH\", type);\n        console.log(\"args COLUMN :\", args);\n        const modal = await DayPilot.Modal.prompt(\"Créer une nouvelle tâche: \",);\n        let name=modal.result;\n        if (!name) {return;}\n        const addZero = (i) => i < 10 ? \"0\" + i :  i;\n        let currentdate = new Date();\n        let day = currentdate.getFullYear() + \"-\"  + addZero((currentdate.getMonth()+1))  + \"-\"\n                  + addZero(currentdate.getDate());\n        let tab = day +\" \"  + \"00:00:00\";\n        let start = new Date(tab);\n        let end = new Date(day +\" \"  + \"23:59:59\");\n        const time_difference = end.getTime() - start.getTime();\n        //calculate days difference by dividing total milliseconds in a day\n        const hours = Math.floor(time_difference / (1000 * 60 * 60));\n        const remaining_milliseconds = time_difference % (1000 * 60 * 60);\n        const minutes = Math.floor(remaining_milliseconds / (1000 * 60));\n\n        let data = JSON.stringify({\n          sujet: name,\n          date_action: tab,\n          color: \"#9e5fff\",\n          duree_heures: hours,\n          duree_minutes: minutes,\n          idutilisateur: this.ID_USER,\n          idtype_action :type === \"column\" ? args.data.id : args.column.data.id,\n          e_lock: this.lock === \"alllock\" ? \"0\" : this.lock,\n          priorite : this.priority === \"allpriority\" ? \"0\" : this.priority,\n        });\n        let config = {\n          method: \"post\",\n          url: this.URI_ACTION + this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n        axios(config)\n          .then(() => {\n            this.onFilter();\n          })\n          .catch(function (error) {\n            console.log(\"Error ON POST: \", error);\n          });\n      },\n      addCreateButton(data) {\n        data.forEach(element => {\n          element.areas= [ \n              { right: 0, top: 0, bottom: 0, width: 18, html : \"+\", cssClass: \"add-button\", \n                action: \"JavaScript\", js: async(args) =>{ \n                  this.createNewTasks(args,\"column\");\n                }\n              } \n            ]\n        });\n        return data;\n      },\n      loadSwimlane() {\n        Vue.set(this.config, \"swimlanes\", this.allUsers);\n      },\n      show(element,value) {\n        const newValue = value.length === 0 ? \"is-active\" : \"\";\n        if(element === \"users\"){\n          (this.showing = newValue)\n        }\n        else{\n          (this.showingItems = newValue);\n        }\n      },\n      setView(item){\n        this.typeview = item;\n        this.show(\"users\",this.showing);\n        this.isLoading = true;\n        this.onFilter();\n      },\n       setColor(type, data) {\n        let  color = type.color;\n        try {\n          const jsondata = data.color.value;\n          color = JSON.parse(jsondata)[type.index];\n        } catch (error) {\n          console.log(\"undefined color data\");\n        }\n        return color;\n      },\n      getQueryParam() {\n        let filter = \"\";\n        // filtering users\n        if (this.user.length > 0) {\n          filter = filter.concat(\n            filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n            this.setfilter(\n              this.user.map((e) => {\n                return e.id;\n              }),\n              \"idutilisateur\"\n            )\n          );\n        }\n        console.log(\"UTILISATEUR / \", this.filter);\n        // e_lock\n        if (this.lock !== \"alllock\") {\n          filter = filter.concat(\n            filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n            this.setfilter(this.lock, \"e_lock\")\n          );\n        }\n        console.log(\"LOCK / \", this.filter);\n        // priorite\n        if (this.priority !== \"allpriority\") {\n          filter = filter.concat(\n            filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n            this.setfilter(this.priority, \"priorite\")\n          );\n        }\n        console.log(\"PRIO / \", this.filter);\n\n        return filter;\n      },\n      setfilter(listArray, param) {\n        if (listArray.length === 1) {\n          return param + \":egal:\" + listArray[0];\n        } else {\n          return (\n            param +\n            \":egal:\" +\n            listArray[0] +\n            \":OR:\" +\n            this.setfilter(listArray.slice(1), param)\n          );\n        }\n      },\n      async onFilter(){\n        let url = this.URI+ this.API_KEY;\n        url+=\"/\"+this.getQueryParam();\n        console.log(\"FILTER URL IS : \",url);\n        this.isLoading=true;\n        this.getKanbanItem(url).then(()=>{\n          Vue.set(this.config, \"swimlanes\", this.allUsers.filter((x) => this.user.includes(x) ));\n          this.loadColumns();\n          this.loadCards();\n          this.isLoading=false;\n        });\n      },\n      async updateCalendar(events,allEvents) {\n        let data = JSON.stringify({\n          idaction: events.idaction,\n          sujet: events.text,\n          e_lock: events.lock,\n          idtype_action :events.column,\n          idutilisateur: events.swimlane,\n          color: events.barColor === \"\" ? \"#9e5fff\" : events.barColor,\n        });\n        let vm= this;\n        let config = {\n          method: \"put\",\n          url: this.URI_ACTION + this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n        return axios(config)\n          .then(function () {\n            console.log(\"AllEvents : \", allEvents);\n            console.log(\"events : \", events);\n            allEvents.update(events);\n            vm.onFilter();\n          })\n          .catch(function (error) {\n            console.log(\"UPDATE API DATAS ERROR : \",error);\n          });\n      },\n    },\n    mounted: function () {\n      this.getAllUsers().then(() =>{\n        this.getKanbanItem().then(() => {\n          this.loadSwimlane();\n          this.loadColumns();\n          this.loadCards();\n          this.getItemsList();\n          this.isLoading = false;\n          this.kanban.cellMarginBottom=40;\n        });\n      });\n    },\n  };\n</script>\n<style>\n  .main_kanban_daypilot {\n    margin-bottom: 20px;\n  }\n  .add-button {\n      cursor: pointer;\n      border: 1px solid #ccc;\n      background-color: #eee;\n      color: #666;\n      text-align: center;\n      line-height: 30px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n  }\n  .add-button:hover {\n      background-color: #ddd;\n  }\n</style>"]}]}