{"remainingRequest":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jr/devspace/simpleCRM/src/components/Scheduler.vue?vue&type=style&index=0&id=3939e33b&lang=scss&scoped=true&","dependencies":[{"path":"/home/jr/devspace/simpleCRM/src/components/Scheduler.vue","mtime":1643721351405},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1643224171816},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643224172087},{"path":"/home/jr/devspace/simpleCRM/node_modules/postcss-loader/src/index.js","mtime":1643224172084},{"path":"/home/jr/devspace/simpleCRM/node_modules/sass-loader/dist/cjs.js","mtime":1641806886688},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1643224169106},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1643224172087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQC92YXJpYWJsZXMuc2NzcyI7CgouY29sb3Jfcm9uZCB7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIHdpZHRoOiAxMnB4OwogIGhlaWdodDogMTJweDsKICBtYXJnaW46IDFweDsKfQouaWNvbi1wcml2YXRlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWU1ZmZmICFpbXBvcnRhbnQ7CiAgaGVpZ2h0OiAxMHB4OwogIG1hcmdpbi10b3A6IDVweDsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIGJvcmRlcjogc29saWQgMXB4ICM5ZTVmZmY7CiAgd2lkdGg6IDExcHg7Cn0KLy8gLmljb24tcHJpdmF0ZSB7Ci8vICAgLy8gaWNvbi1ibHVlOmJlZm9yZSB7Ci8vICAgYmFja2dyb3VuZC1jb2xvcjogIzllNWZmZjsKLy8gICAvL30KLy8gfQouc2NoZWxkdWxlciwKLnNjaGVkdWxlcl9kZWZhdWx0X21haW4gewogIGZvbnQtZmFtaWx5OiAiUG9wcGlucyIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsKfQpsYWJlbCB7CiAgZGlzcGxheTogaW5saW5lLWZsZXg7CiAgcGFkZGluZzogMjBweCAyMHB4IDEwcHg7Cn0Kc2VsZWN0IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDQwcHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgcGFkZGluZzogMCAxMHB4OwogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LXdlaWdodDogNTAwOwogIGNvbG9yOiAjMzMzOwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjUgIWltcG9ydGFudDsKICBvdXRsaW5lOiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["Scheduler.vue"],"names":[],"mappingsm8BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scheduler.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"schelduler\">\n    <b-loading\n      :is-full-page=\"isFullPage\"\n      v-model=\"isLoading\"\n      :can-cancel=\"true\"\n    ></b-loading>\n    <section\n      class=\"\n        is-flex-widescreen is-justify-content-flex-start is-align-items-baseline\n        pr-2\n      \"\n    >\n      <div class=\"column is-narrow\">\n        <div class=\"is-flex is-flex-wrap-wrap\">\n          <label class=\"label pt-2\">\n            Affichage\n            <span class=\"is-hidden-widescreen\">&nbsp;&nbsp;&nbsp;</span> :\n            &nbsp;\n          </label>\n          <div class=\"control is-flex-grow-2\">\n            <div class=\"dropdown is-block is-fullwidth\" v-bind:class=\"showing\">\n              <div class=\"dropdown-trigger\">\n                <button\n                  class=\"button is-fullwidth is-justify-content-space-between\"\n                  aria-haspopup=\"true\"\n                  aria-controls=\"dropdown-menu\"\n                  @click=\"show\"\n                >\n                  <span class=\"icon-text\">\n                    <span class=\"icon\">\n                      <em\n                        class=\"fas fa-circle\"\n                        v-bind:style=\"{ color: typeview.color }\"\n                      ></em>\n                    </span>\n                    <span>{{ typeview.title }}</span>\n                  </span>\n                  <span class=\"icon is-small\">\n                    <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                  </span>\n                </button>\n              </div>\n              <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                <div class=\"dropdown-content has-text-left\">\n                  <a\n                    class=\"dropdown-item\"\n                    v-for=\"(item, i) in arrayFilter\"\n                    :key=\"i\"\n                    :value=\"item.title\"\n                    @click=\"setView(item)\"\n                  >\n                    <span class=\"icon-text\">\n                      <span class=\"icon\" v-bind:style=\"{ color: item.color }\">\n                        <em class=\"fas fa-circle\"></em>\n                      </span>\n                      <span>{{ item.title }}</span>\n                    </span>\n                  </a>\n                  <hr class=\"dropdown-divider\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"column is-narrow\">\n        <div class=\"is-flex is-flex-wrap-wrap\">\n          <label class=\"label pt-2\"\n            >Utilisateurs <span class=\"is-hidden-widescreen\">&nbsp;</span>:\n            &nbsp;</label\n          >\n          <div class=\"control is-flex-grow-2\">\n            <div class=\"select is-block\">\n              <multiselect\n                v-model=\"selectedUsers\"\n                :options=\"users\"\n                :multiple=\"true\"\n                :close-on-select=\"false\"\n                :clear-on-select=\"false\"\n                :preserve-search=\"true\"\n                placeholder=\"Selectionnez\"\n                label=\"name\"\n                track-by=\"name\"\n                :preselect-first=\"true\"\n                @close=\"dispatchAction\"\n              >\n                <template slot=\"selection\" slot-scope=\"{ values, isOpen }\"\n                  ><span\n                    class=\"multiselect__single\"\n                    v-if=\"values.length &amp;&amp; !isOpen\"\n                    >{{ values.length }} selections</span\n                  ></template\n                >\n              </multiselect>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"column is-narrow\">\n        <div class=\"is-flex is-flex-wrap-wrap\">\n          <label\n            class=\"\n              label\n              is-flex-tablet-only is-justify-content-space-between\n              pt-2\n            \"\n            for=\"month\"\n          >\n            Mois\n            <span class=\"is-hidden-widescreen\">\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span\n            >: &nbsp;\n          </label>\n          <div class=\"control is-flex-grow-2\">\n            <div class=\"select is-block is-fullwidth\">\n              <select\n                name=\"month\"\n                id=\"month\"\n                class=\"is-block-mobile\"\n                v-model=\"month_selected\"\n                @change=\"updateStartDate\"\n              >\n                <option v-for=\"month in months\" :key=\"month\">\n                  {{ month }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"column is-narrow\">\n        <div class=\"is-flex is-flex-wrap-wrap\">\n          <label\n            class=\"\n              label\n              is-flex-tablet-only is-justify-content-space-between\n              pt-2\n            \"\n            for=\"year\"\n          >\n            Ann√©e\n            <span class=\"is-hidden-widescreen\">\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span\n            >: &nbsp;\n          </label>\n          <div class=\"control is-flex-grow-2\">\n            <div class=\"select is-block is-fullwidth\">\n              <select\n                name=\"year\"\n                class=\"is-block-mobile\"\n                id=\"year\"\n                v-model=\"year_selected\"\n                @change=\"updateStartDate\"\n              >\n                <option\n                  v-for=\"year in [\n                    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\n                    17, 18, 19,\n                  ]\"\n                  :key=\"year\"\n                  :value=\"currentYear - year\"\n                >\n                  {{ currentYear - year }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <div class=\"columns\">\n      <div class=\"column is-12\">\n        <DayPilotScheduler\n          style=\"width: 100%\"\n          id=\"dp\"\n          :config=\"config\"\n          ref=\"scheduler\"\n        />\n      </div>\n    </div>\n\n    <b-modal :active.sync=\"isComponentModalActive\" has-modal-card>\n      <form method=\"post\" @submit.prevent=\"handleCreateSchedule\">\n        <div class=\"modal-card\" style=\"width: auto\">\n          <header class=\"modal-card-head\">\n            <p class=\"modal-card-title\">Creation de t√¢che</p>\n          </header>\n          <section\n            class=\"modal-card-body is-size-5 columns is-multiline is-marginless\"\n          >\n            <div class=\"column\" label=\"Titre\">\n              <b-input\n                name=\"sujet\"\n                type=\"text\"\n                v-model=\"form.sujet\"\n                placeholder=\"Titre de la tache\"\n              ></b-input>\n              <span\n                class=\"has-text-danger is-size-7\"\n                v-if=\"!form.sujet && form.submit == true\"\n              >\n                {{ errors.sujet }}\n              </span>\n            </div>\n          </section>\n          <footer class=\"modal-card-foot is-justify-content-flex-end\">\n            <button\n              class=\"button\"\n              type=\"button\"\n              @click=\"\n                form.sujet = '';\n                errors.sujet = '';\n                // dp.update();\n                isComponentModalActive = false;\n              \"\n            >\n              Annuler\n            </button>\n\n            <button\n              type=\"submit\"\n              class=\"button is-danger\"\n              :class=\"loading ? 'is-loading' : ''\"\n            >\n              Creer\n            </button>\n          </footer>\n        </div>\n      </form>\n    </b-modal>\n  </section>\n</template>\n\n<script>\nimport { DayPilot, DayPilotScheduler } from \"daypilot-pro-vue\";\nimport Vue from \"vue\";\nimport axios from \"axios\";\nimport Multiselect from \"vue-multiselect\";\nimport \"vue-multiselect/dist/vue-multiselect.min.css\";\nexport default {\n  name: \"Scheduler\",\n  props: {\n    arrayFilter: {\n      type: Array,\n      default() {\n        return [\n          {\n            color: \"#2251ff\",\n            title: \"D√©faut\",\n            index: \"color_defaut\",\n          },\n          {\n            color: \"#ffcedf0\",\n            title: \"Etat\",\n            index: \"color_etat\",\n          },\n          {\n            color: \"#25ffcd\",\n            title: \"Priorit√©\",\n            index: \"color_priorite\",\n          },\n          {\n            color: \"#de452a\",\n            title: \"Utilisateur\",\n            index: \"color_utilisateur\",\n          },\n          {\n            color: \"#cdee00\",\n            title: \"Type\",\n            index: \"color_type\",\n          },\n          {\n            color: \"#e19400\",\n            title: \"Priorit√© √©ch√©ance\",\n            index: \"color_priorite_echeance\",\n          },\n        ];\n      },\n    },\n    USER_API: {\n      type: String,\n      default() {\n        return \"https://0002-zebridge-dev-externe.api.crm-simple.com/utilisateurs/\";\n      },\n    },\n    API_KEY: {\n      type: String,\n      default() {\n        return \"\";\n      },\n    },\n    IdUser: {\n      type: String,\n      default() {\n        return \"\";\n      },\n    },\n\n    URI: {\n      type: String,\n      default() {\n        return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interactions/\";\n      },\n    },\n\n    URI_ACTION: {\n      type: String,\n      default() {\n        return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interaction/\";\n      },\n    },\n\n    months: {\n      type: Array,\n      default() {\n        return [\n          \"Janvier\",\n          \"F√©vrier\",\n          \"Mars\",\n          \"Avril\",\n          \"Mai\",\n          \"Juin\",\n          \"Juillet\",\n          \"Ao√ªt\",\n          \"Septembre\",\n          \"Octobre\",\n          \"Novembre\",\n          \"D√©cembre\",\n        ];\n      },\n    },\n    month_selected_number: {\n      type: Number,\n      default() {\n        return new Date().getMonth();\n      },\n    },\n\n    month_selected: {\n      type: String,\n      default() {\n        return this.months[this.month_selected_number];\n      },\n    },\n\n    year_selected: {\n      type: Number,\n      default() {\n        return new Date().getFullYear();\n      },\n    },\n\n    index: {\n      type: String,\n      default() {\n        return (this.months.indexOf(this.month_selected) + 1).toLocaleString(\n          \"en-US\",\n          {\n            minimumIntegerDigits: 2,\n            useGrouping: false,\n          }\n        );\n      },\n    },\n    idUtilisateurs: {\n      type: Array,\n      default() {\n        return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n      },\n    },\n    idprojets: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    idcontacts: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    idsocietes: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n  },\n\n  data() {\n    return {\n      users: [],\n      args: {},\n      typeview: {\n        title: \"Selectionnez\",\n        color: \"#2251ff\",\n        index: \"color_defaut\",\n      },\n      isLoading: true,\n      isFullPage: false,\n      the_user_ID: this.IdUser,\n      showing: \"\",\n      currentYear: this.year_selected,\n      selectedUsers: [],\n      loading: false,\n      myEvents: [],\n      endDate: \"\",\n      startDate: \"\",\n      events: null,\n      myResources: [],\n      isComponentModalActive: false,\n      tasks: [],\n      form: {\n        sujet: \"\",\n\n        submit: false,\n      },\n      locale: \"fr-FR\",\n      errors: {\n        sujet: \"Le champs titre est obligatoire\",\n      },\n\n      config: {\n        idUser: this.IdUser,\n        //range:\"Year\",\n        events: [], // events items list on dayplot\n        timeHeaders: [\n          // { groupBy: \"Year\" },\n          { groupBy: \"Month\" },\n          { groupBy: \"Week\" },\n          { groupBy: \"Day\", format: \"d\" },\n        ],\n        scale: \"Day\",\n        days: DayPilot.Date.today().daysInYear(),\n        // startDate: DayPilot.Date.today().firstDayOfMonth(),\n\n        startDate: this.year_selected + \"-\" + this.index + \"-01\",\n        timeRangeSelectedHandling: \"Enabled\",\n        onTimeRangeSelected: (args) => {\n          this.isComponentModalActive = true;\n          this.events = args;\n        },\n\n        onBeforeTimeHeaderRender: (args) => {\n          if (args.header.level === 1) {\n            args.header.html = \"Semaine \" + args.header.start.weekNumberISO();\n          }\n        },\n        // onBeforeCellRender: (args) => {\n        //   if (args.cell.resource != this.IdUser) {\n        //     args.cell.disabled = true;\n        //     //args.cell.backColor = \"#dddddd\";\n        //   }\n        // },\n\n        eventMoveHandling: \"Update\",\n        onEventMoved: (args) => {\n          if (args.e.data.lock === \"0\") {\n            this.Update_event({\n              idaction: args.e.data.idaction,\n              id: args.e.id(),\n              start: args.newStart,\n              end: args.newEnd,\n              text: args.e.data.text,\n              resource: args.e.resource(),\n              lock: args.e.data.lock,\n              color: args.e.data.color,\n            });\n          }\n        },\n\n        eventResizeHandling: \"Update\",\n        onEventResized: async (args) => {\n          if (args.e.data.lock === \"0\") {\n            const event = {\n              idaction: args.e.data.idaction,\n              id: args.e.id(),\n              start: args.newStart,\n              end: args.newEnd,\n              text: args.e.data.text,\n              resource: args.e.resource(),\n              lock: args.e.data.lock,\n              color: args.e.data.color,\n            };\n\n            this.Update_event(event);\n          }\n        },\n\n        eventClickHandling: \"Editing\",\n        onEventClicked: async (args) => {\n          if (args.e.data.lock === \"0\") {\n            const modal = await DayPilot.Modal.prompt(\n              \"Modifier: \",\n              args.e.text()\n            );\n            if (modal.canceled) {\n              return;\n            }\n\n            const event = {\n              idaction: args.e.cache.idaction,\n              id: args.e.id(),\n              start: args.e.start(),\n              end: args.e.end(),\n              text: modal.result,\n              resource: args.e.resource(),\n              lock: args.e.data.lock,\n              color: args.e.data.color,\n            };\n\n            let index = this.config.events.findIndex(\n              (x) => x.id === args.e.id()\n            );\n            this.config.events[index] = event;\n            var tab = String(event.start).replace(\"T\", \" \");\n            var data = JSON.stringify({\n              idaction: event.idaction,\n              sujet: event.text,\n              date_action: tab,\n            });\n            axios({\n              method: \"put\",\n              url: this.URI_ACTION + this.API_KEY,\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              data: data,\n            }).then(() => {\n              this.dispatchAction();\n            });\n          }\n        },\n        eventHoverHandling: \"Bubble\",\n        bubble: new DayPilot.Bubble({\n          onLoad: (args) => {\n            let idaction = args.source.data.idaction;\n            let start = \"\";\n            let end = \"\";\n            start = args.source.data.start;\n            start = start.split(\" \");\n\n            let new_date = start[0].split(\"-\");\n            start[0] = new_date[2] + \"-\" + new_date[1] + \"-\" + new_date[0];\n\n            var new_end = start[1].split(\":\");\n            start[1] = new_end[0] + \":\" + new_end[1];\n\n            end = args.source.data.end;\n            end = end.split(\" \");\n            new_date = end[0].split(\"-\");\n            end[0] = new_date[2] + \"-\" + new_date[1] + \"-\" + new_date[0];\n            new_end = end[1].split(\":\");\n            end[1] = new_end[0] + \":\" + new_end[1];\n\n            // if event object doesn't specify \"bubbleHtml\" property\n            // this onLoad handler will be called to provide the bubble HTML\n            args.html =\n              \"<span style='font-weight: 900'>\" +\n              args.source.data.text +\n              \"</span></br>\" +\n              \"D√©but: \" +\n              start[0] +\n              \" √† \" +\n              start[1] +\n              \"</br>\" +\n              \"Fin: \" +\n              end[0] +\n              \" √† \" +\n              end[1] +\n              \"</br>\" +\n              \"<a href='https://0002-zebridge-dev-externe.crm-simple.com/action_edit.php?idaction=\" +\n              idaction +\n              \"' target='_blank'rel='noopener' >Voir plus</a>\";\n            start = \"\";\n            end = \"\";\n           \n          },\n        }),\n        treeEnabled: true,\n        onBeforeEventRender: (args) => {\n          if (args.data.lock === \"1\") {\n            args.data.moveDisabled = true;\n            args.data.resizeDisabled = true;\n            args.data.clickDisabled = true;\n          }\n          // } else {\n          //   args.data.moveDisabled = true;\n          //   args.data.resizeDisabled = true;\n          //   args.data.clickDisabled = true;\n          // }\n          args.data.barColor = args.data.color;\n          args.data.areas = [\n            {\n              top: 12,\n              right: 6,\n              width: 16,\n              height: 16,\n              icon: \"fas fa-chevron-down\",\n              fontColor: \"#999\",\n              visibility: \"Visible\",\n              action: \"ContextMenu\",\n              style:\n                \"display:flex;justify-content:center; align-items: center;background-color: #f9f9f9; border: 1px solid #ccc; cursor:pointer;\",\n            },\n          ];\n        },\n      },\n    };\n  },\n  components: {\n    DayPilotScheduler,\n    Multiselect,\n  },\n  computed: {\n    // DayPilot.Scheduler object - https://api.daypilot.org/daypilot-scheduler-class/\n    scheduler: function () {\n      return this.$refs.scheduler.control;\n    },\n  },\n  methods: {\n    show() {\n      this.showing = this.showing.length === 0 ? \"is-active\" : \"\";\n    },\n\n    setView(type) {\n      this.typeview = type;\n      this.show();\n      this.dispatchAction();\n    },\n    setColor(type, data) {\n      let color = type.color;\n      try {\n        const jsondata = data.color.value;\n        color = JSON.parse(jsondata)[type.index];\n      } catch (error) {\n        //console.log(\"undefined color data\");\n      }\n\n      return color;\n    },\n    setRenderRangeText() {\n  \n      let index = (this.months.indexOf(this.month_selected) + 1).toLocaleString(\n        \"en-US\",\n        { minimumIntegerDigits: 2, useGrouping: false }\n      );\n    \n      this.startDate = this.year_selected + \"-\" + index + \"-01\";\n   \n      this.endDate = this.year_selected + \"-\" + index + \"-31\";\n\n    },\n    getQueryParam() {\n      /**\n       *@param none\n       *@author Jacques\n       *@Resume : figure out  filter on API request\n       *@example : condition:idutilisateur:egal:1:OR:idutilisateur:egal:4:separator:AND:condition:idprojet:egal:1:OR:idprojet:egal:4060:separator:AND:condition:idsociete:egal:4:OR:idsociete:egal:2234\n       **/\n\n      let filter = \"\";\n      // filtering users\n      if (this.selectedUsers.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(\n            this.selectedUsers.map((e) => {\n              return e.id;\n            }),\n            \"idutilisateur\"\n          )\n        );\n      }\n\n      // idprojet\n      if (this.idprojets.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(this.idprojets, \"idprojet\")\n        );\n      }\n\n      // idcontact\n      if (this.idcontacts.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(this.idcontacts, \"idcontact\")\n        );\n      }\n\n      // idsociete\n      if (this.idsocietes.length > 0) {\n        filter = filter.concat(\n          filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n          this.setfilter(this.idsocietes, \"idsociete\")\n        );\n      }\n      filter = filter.concat(\n        filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n        \"date_action:biggerthanoregal:\" +\n          this.startDate +\n          \":AND:date_action:lowerthanoregal:\" +\n          this.endDate\n      );\n\n      return filter;\n    },\n    setfilter(listArray, param) {\n      if (listArray.length === 1) {\n        return param + \":egal:\" + listArray[0];\n      } else {\n        return (\n          param +\n          \":egal:\" +\n          listArray[0] +\n          \":OR:\" +\n          this.setfilter(listArray.slice(1), param)\n        );\n      }\n    },\n    async loadUsers() {\n      return await axios({\n        method: \"get\",\n        url: this.USER_API + this.API_KEY,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          if (response.data.result === 1) {\n            this.users = response.data.data.map((el) => {\n              return {\n                id: el.idutilisateur.value.toString(),\n                name: el.nom_utilisateur.value.toString(),\n              };\n            });\n            this.selectedUsers = this.users.filter(\n              (x) => x.id in this.idUtilisateurs\n            );\n\n            this.config.iduser = this.IdUser;\n            Vue.set(this.config, \"resources\", this.users); // setting new  properties for config\n          } else {\n            //console.log(response.data.err_message);\n          }\n\n          return response.data.result;\n        })\n        .catch((error) => {\n          console.log(error);\n          //return response.data.result;\n        });\n    },\n    dispatchAction() {\n      this.isLoading = true;\n      this.getData(0).then((items) => {\n        Vue.set(this.config, \"events\", items.flat(Infinity));\n\n        this.isLoading = false;\n      });\n    },\n\n    Update_event(events) {\n      var new_string = \"\" + events.start;\n      new_string = new_string.replace(\"T\", \" \");\n      let tab = new_string.split(\".\")[0];\n\n      var fin = new Date(events.end);\n      var debut = new Date(events.start);\n\n      const time_difference = fin.getTime() - debut.getTime();\n      const hours = Math.floor(time_difference / (1000 * 60 * 60));\n      const remaining_milliseconds = time_difference % (1000 * 60 * 60);\n      const minutes = Math.floor(remaining_milliseconds / (1000 * 60));\n\n      var data = JSON.stringify({\n        idaction: events.idaction,\n        sujet: events.text,\n        idutilisateur: events.resource,\n        date_action: tab,\n        e_lock: events.lock,\n        duree_heures: hours,\n        duree_minutes: minutes,\n        color: events.color === \"\" ? \"#9e5fff\" : events.color,\n      });\n\n      var config = {\n        method: \"put\",\n        url: this.URI_ACTION + this.API_KEY,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n      return axios(config)\n        .then(async () => {\n          this.scheduler.update(events);\n          this.config.event = [];\n          await this.dispatchAction();\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    handleCreateSchedule() {\n      const dp = this.events.control;\n\n      this.form.submit = true;\n      if (this.form.sujet != \"\") {\n        this.loading = true;\n\n        var ef = this;\n        var tab = String(this.events.start.value).replace(\"T\", \" \");\n        tab = tab.replace(\".000Z\", \"\");\n\n        var fin = new Date(this.events.end.value);\n        var debut = new Date(this.events.start.value);\n\n        const time_difference = fin.getTime() - debut.getTime();\n\n        //calculate days difference by dividing total milliseconds in a day\n        const hours = Math.floor(time_difference / (1000 * 60 * 60));\n        const remaining_milliseconds = time_difference % (1000 * 60 * 60);\n        const minutes = Math.floor(remaining_milliseconds / (1000 * 60));\n\n        var data = JSON.stringify({\n          sujet: ef.form.sujet,\n          date_action: tab,\n          color: \"#9e5fff\",\n          duree_heures: hours,\n          idutilisateur: this.events.resource,\n          duree_minutes: minutes,\n        });\n\n        var config = {\n          method: \"post\",\n          url: this.URI_ACTION + this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n\n        return axios(config).then((response) => {\n          let newElement = {\n            idaction: response.data.idaction,\n            start: this.events.start.value,\n            end: this.events.end.value,\n            id: response.data.idaction,\n            resource: this.events.resource,\n            text: this.form.sujet,\n            color: \"#9e5fff\",\n            lock: \"0\",\n          };\n\n          dp.events.add(newElement);\n          this.loading = false;\n          this.isComponentModalActive = false;\n          this.form.sujet = \"\";\n          this.errors.sujet = \"\";\n          return newElement;\n        });\n      } else {\n        this.loading = false;\n        this.errors.sujet = \"Le champs titre est obligatoire\";\n      }\n    },\n    async getData(nbPage = 0) {\n      return axios({\n        method: \"get\",\n        url:\n          this.URI + this.API_KEY + \"/\" + this.getQueryParam() + \"/\" + nbPage,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          if (response.data.data.length > 0) {\n            let data = response.data.data.map((tache) => {\n              return {\n                id: tache.idaction.value.toString(),\n                idaction: tache.idaction.value,\n                start: tache.date_action.value,\n                end: tache.date_fin.value,\n                text: tache.sujet.value,\n                resource: tache.idutilisateur.value,\n                lock: tache.e_lock.value,\n                color: this.setColor(this.typeview, tache),\n\n                //color: tache.color.value === \"\" ? \"#9e5fff\" : tache.color.value,\n                //bgColor: tache.color.value || \"#FFF\",\n                // bgColor: \"#e8eef7\",\n              };\n            });\n            return Promise.all([...data, this.getData(++nbPage)]);\n          } else {\n            return [];\n          }\n        })\n        .catch(() => {\n          return [];\n        });\n    },\n    // loadEvents() {\n    //   Vue.set(this.config, \"events\", this.myEvents);\n    // },\n    //loadResources() {\n    /***\n     * Loading user data and set them as ressource\n     */\n    // this.loadUsers().then(data)=> {\n    // }\n    //   Vue.set(this.config, \"resources\", this.myResources);\n    // },\n\n    updateColor(e, color) {\n      var dp = this.scheduler;\n      e.data.color = color;\n      dp.events.update(e);\n    },\n\n    // updateT√¢ches() {\n    //   for (let item of this.config.events) {\n    //     this.updateColor(item, item.color);\n    //     this.lockT√¢ches(item);\n    //   }\n    // },\n    updateStartDate() {\n      let index = (this.months.indexOf(this.month_selected) + 1).toLocaleString(\n        \"en-US\",\n        { minimumIntegerDigits: 2, useGrouping: false }\n      );\n      this.config.startDate = this.year_selected + \"-\" + index + \"-01\";\n     // this.startDate = this.year_selected + \"-\" + index + \"-01\";\n       this.setRenderRangeText();\n\n      this.dispatchAction();\n    },\n  },\n  watch: {\n    isComponentModalActive() {\n      if (!this.isComponentModalActive) {\n        this.form.sujet = \"\";\n        this.errors.sujet = \"\";\n      }\n      this.config.timeRangeSelectedHandling = !this.isComponentModalActive\n        ? \"CallBack\"\n        : \"Enabled\";\n    },\n  },\n\n  async mounted() {\n    this.setRenderRangeText();\n    await this.loadUsers(); // loading users list* and ressource by the  way\n    this.dispatchAction(); // Load and set planing's  items;\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/variables.scss\";\n\n.color_rond {\n  border-radius: 8px;\n  width: 12px;\n  height: 12px;\n  margin: 1px;\n}\n.icon-private {\n  background-color: #9e5fff !important;\n  height: 10px;\n  margin-top: 5px;\n  border-radius: 10px;\n  border: solid 1px #9e5fff;\n  width: 11px;\n}\n// .icon-private {\n//   // icon-blue:before {\n//   background-color: #9e5fff;\n//   //}\n// }\n.schelduler,\n.scheduler_default_main {\n  font-family: \"Poppins\", sans-serif !important;\n}\nlabel {\n  display: inline-flex;\n  padding: 20px 20px 10px;\n}\nselect {\n  width: 100%;\n  height: 40px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  padding: 0 10px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n  background-color: #f5f5f5 !important;\n  outline: none;\n  cursor: pointer;\n}\n</style>\n"]}]}