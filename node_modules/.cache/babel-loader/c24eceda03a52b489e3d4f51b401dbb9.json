{"remainingRequest":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jr/devspace/simpleCRM/src/components/SchedulerKanban.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jr/devspace/simpleCRM/src/components/SchedulerKanban.vue","mtime":1643963411474},{"path":"/home/jr/devspace/simpleCRM/babel.config.js","mtime":1643225596571},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1643224169106},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1643224169006},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1643224169106},{"path":"/home/jr/devspace/simpleCRM/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1643224172087}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SchedulerKanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA,SAAA,cAAA,EAAA,QAAA,QAAA,kBAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,WAAA,MAAA,iBAAA,C,CACA;;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA,KADA;AAOA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,CAAA;AACA;AAJA,KAPA;AAaA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,oEAAA;AACA;AAJA,KAbA;AAmBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,mEAAA;AACA;AAJA,KAnBA;AAyBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,uEAAA;AACA;AAJA,KAzBA;AA+BA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,mEAAA;AACA;AAJA,KA/BA;AAqCA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA;AAJA;AArCA,GAFA;AA8CA,EAAA,IAAA,EAAA,gBAAA;AAAA;;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,SALA;AAMA,MAAA,IAAA,EAAA,SANA;AAOA,MAAA,QAAA,EAAA,aAPA;AAQA,MAAA,KAAA,EAAA,EARA;AASA,MAAA,QAAA,EAAA,EATA;AAUA,MAAA,KAAA,EAAA,EAVA;AAWA,MAAA,OAAA,EAAA,EAXA;AAYA,MAAA,YAAA,EAAA,EAZA;AAaA,MAAA,QAAA,EAAA;AACA,QAAA,KAAA,EAAA,cADA;AAEA,QAAA,KAAA,EAAA,SAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAbA;AAkBA,MAAA,SAAA,EAAA,EAlBA;AAmBA,MAAA,UAAA,EAAA,EAnBA;AAoBA,MAAA,WAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OANA,EAWA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAXA,EAgBA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,aAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAhBA,EAqBA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OArBA,EA0BA;AACA,QAAA,KAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA,mBAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OA1BA,CApBA;AAoDA,MAAA,MAAA,EAAA;AACA,QAAA,eAAA,EAAA,MADA;AAEA,QAAA,oBAAA,EAAA,UAFA;AAGA,QAAA,kBAAA,EAAA,QAHA;AAIA;AACA;AACA;AACA,QAAA,kBAAA,EAAA,UAPA;AAQA,QAAA,gBAAA,EAAA,SARA;AASA,QAAA,WAAA,EAAA,qBAAA,IAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,IAAA;;AACA,UAAA,KAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAFA,CAGA;;AACA,SAbA;AAcA,QAAA,kBAAA,EAAA,4BAAA,IAAA,EAAA;AACA,cAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,KAAA,GAAA,CAAA;AACA,cAAA,KAAA,EAAA,CADA;AAEA,cAAA,MAAA,EAAA,CAFA;AAGA,cAAA,KAAA,EAAA,GAHA;AAIA,cAAA,MAAA,EAAA,EAJA;AAKA,cAAA,IAAA,EAAA,SALA;AAMA,cAAA,QAAA,EAAA,YANA;AAOA,cAAA,MAAA,EAAA,YAPA;AAOA,cAAA,EAAA;AAAA,kFAAA,iBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,IAAA;;AACA,0BAAA,KAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPA,aAAA,CAAA;AAYA;AACA,SA7BA;AA8BA,QAAA,sBAAA,EAAA,UA9BA;AA+BA,QAAA,WAAA;AAAA,qFAAA,kBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,IAAA;;AADA,0BAEA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,KAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA,KAAA,KAAA,CAAA,OAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAGA,QAAA,CAAA,KAAA,CAAA,MAAA,CACA,iCADA,EACA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IADA,CAHA;;AAAA;AAGA,oBAAA,KAHA;AAMA,oBAAA,IANA,GAMA,KAAA,CAAA,MANA;;AAAA,wBAOA,IAPA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAQA,oBAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA;;AACA,oBAAA,KAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,WA/BA,CA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7HA;AApDA,KAAA;AAoLA,GAnOA;AAoOA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,WAAA,EAAA;AAFA,GApOA;AAwOA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,MAAA,EAAA,kBAAA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,OAAA;AACA;AAJA,GAxOA;AA8OA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,WAAA,0EAAA,CAAA;AACA,gBAAA,EADA,GACA,MADA;AAAA,kDAEA,KAAA,CAAA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,GAAA,EAAA,uEAAA,MAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oCAAA;AADA;AAHA,iBAAA,CAAA,CAOA,IAPA,CAOA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAFA,CAGA;;AAAA;AACA,kBAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,oBAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,sBAAA,IAAA,EAAA,OAAA,CAAA,eAAA,CAAA,KADA;AAEA,sBAAA,EAAA,EAAA,OAAA,CAAA,aAAA,CAAA;AAFA,qBAAA;AAIA,mBALA;AAMA,kBAAA,EAAA,CAAA,IAAA,GAAA,EAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,2BAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,cAAA;AAAA,mBAAA,CAAA;AACA,kBAAA,WAAA;;AACA,sBAAA,WAAA,IAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,yBAAA,WAAA,CAAA,WAAA;AACA;AACA,iBAtBA,EAuBA,KAvBA,CAuBA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,0BAAA,EAAA,KAAA;AACA,yBAAA,EAAA;AACA,iBA1BA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA,KA9BA;AA+BA,IAAA,OA/BA,mBA+BA,CA/BA,EA+BA,CA/BA,EA+BA;AACA,UAAA,CAAA,CAAA,QAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AACA,eAAA,CAAA,CAAA;AACA;;AACA,UAAA,CAAA,CAAA,QAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AACA,eAAA,CAAA;AACA;;AACA,aAAA,CAAA;AACA,KAvCA;AAwCA,IAAA,YAxCA,0BAwCA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,WAAA,6EAAA,CAAA;AAAA,kDACA,KAAA,CAAA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,GAAA,EAAA,MAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oCAAA;AADA;AAHA,iBAAA,CAAA,CAOA,IAPA,CAOA,UAAA,QAAA,EAAA;AACA,sBAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,oBAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,sBAAA,EAAA,EAAA,OAAA,CAAA,UADA;AAEA,sBAAA,QAAA,EAAA,OAAA,CAAA;AAFA,qBAAA;AAIA,mBALA;AAMA,kBAAA,WAAA;;AACA,sBAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,oBAAA,MAAA,CAAA,YAAA,CAAA,WAAA;AACA,mBAFA,MAGA;AACA,oBAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA;;AACA,oBAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA;AACA,iBAvBA,EAwBA,KAxBA,CAwBA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,0BAAA,EAAA,KAAA;AACA,yBAAA,EAAA;AACA,iBA3BA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA,KArEA;AAsEA,IAAA,cAtEA,0BAsEA,IAtEA,EAsEA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,WAAA,6EAAA,CAAA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,EAJA,GAIA,IAAA,CAAA,EAJA;AAKA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,EAAA;AALA,kDAMA,KAAA,CAAA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,GAAA,EAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,OAAA,GAAA,6BAAA,GAAA,EAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oCAAA;AADA;AAHA,iBAAA,CAAA,CAOA,IAPA,CAOA,UAAA,QAAA,EAAA;AACA,sBAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,sBAAA,EAAA,QAAA,EAFA,CAGA;;AAAA;AACA,kBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,oBAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,sBAAA,EAAA,EAAA,OAAA,CAAA,aADA;AAEA,sBAAA,IAAA,EAAA,OAAA,CAAA;AAFA,qBAAA;AAIA,mBALA;AAMA,kBAAA,WAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,MAAA,CAAA,UAAA;AACA,kBAAA,WAAA,IAAA,QAAA,CAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA,YAAA,GAAA,EAAA,GAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,CAAA;AACA,kBAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,kBAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,eAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AACA,kBAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,CAAA,UAAA;AACA,kBAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,CAAA,UAAA;;AACA,kBAAA,MAAA,CAAA,YAAA;;AACA,kBAAA,MAAA,CAAA,SAAA;AACA,iBA1BA,EA2BA,KA3BA,CA2BA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,iCAAA,EAAA,KAAA;AACA,yBAAA,EAAA;AACA,iBA9BA,CANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA,KA3GA;AA4GA,IAAA,aA5GA,2BA4GA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,GAAA,6EAAA,MAAA,CAAA,GAAA,GAAA,MAAA,CAAA,OAAA;AAAA,gBAAA,WAAA,6EAAA,CAAA;AACA,gBAAA,EADA,GACA,MADA;AAEA,gBAAA,EAAA,CAAA,KAAA,GAAA,WAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA,CAAA,KAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA,WAAA;AAHA,kDAIA,KAAA,CAAA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,WAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oCAAA;AADA;AAHA,iBAAA,CAAA,CAOA,IAPA,CAOA,UAAA,QAAA,EAAA;AACA,sBAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,QAAA;AACA,sBAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA;;AACA,sBAAA,OAAA,GAAA,SAAA,OAAA,CAAA,EAAA,EAAA;AACA,2BAAA,EAAA,CAAA,MAAA,CAAA,UAAA,EAAA,EAAA,CAAA,EAAA;AACA,uBAAA,EAAA,CAAA,CAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GACA,EAAA,CAAA,CAAA,CAAA,aAAA,CAAA,KAAA,CAAA,IAAA,EADA,EACA,IADA,CACA,CADA;AAEA,6BAAA,EAAA;AACA,qBAJA,EAIA,EAJA,CAAA;AAKA,mBANA;;AAOA,sBAAA,QAAA,GAAA,OAAA,CAAA,KAAA,CAAA;AACA,sBAAA,SAAA,GAAA,EAAA;;AACA,qDAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,qCAAA;AAAA;AAAA,wBAAA,GAAA;;AACA,oBAAA,SAAA,CAAA,IAAA,CAAA;AACA,sBAAA,EAAA,YAAA,GAAA,CADA;AAEA,sBAAA,KAAA,EAAA,QAAA,WAAA,GAAA;AAFA,qBAAA;AAIA;;AACA,kBAAA,SAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,oBAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,sBAAA,EAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA,wBAAA,QAAA,EAAA,IAAA,CAAA,QAAA,CAAA,KADA;AAEA,wBAAA,EAAA,EAAA,KAFA;AAGA,wBAAA,IAAA,EAAA,EAHA;AAIA,wBAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAJA;AAKA,wBAAA,QAAA,EAAA,OAAA,CAAA,EALA;AAMA,wBAAA,KAAA,EAAA,IAAA,CAAA,WAAA,CAAA,KANA;AAOA,wBAAA,GAAA,EAAA,IAAA,CAAA,QAAA,CAAA,KAPA;AAQA,wBAAA,MAAA,EAAA,IAAA,CAAA,aAAA,CAAA,KARA;AASA,wBAAA,IAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KATA;AAUA,wBAAA,QAAA,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,QAAA,EAAA,IAAA,CAVA;AAWA,wBAAA,QAAA,EAAA,IAAA,CAAA,QAAA,CAAA,KAXA;AAYA,wBAAA,KAAA,EAAA,CACA;AACA,0BAAA,KAAA,EAAA,CADA;AAEA,0BAAA,GAAA,EAAA,CAFA;AAGA,0BAAA,KAAA,EAAA,EAHA;AAIA,0BAAA,MAAA,EAAA,EAJA;AAKA,0BAAA,IAAA,EAAA,oBALA;AAMA,0BAAA,KAAA,EAAA,kCANA;AAOA,0BAAA,MAAA,EAAA,QAPA;AAQA,0BAAA,MAAA,EAAA,IAAA,QAAA,CAAA,MAAA,CAAA;AACA,4BAAA,MAAA,EAAA,gBAAA,IAAA,EAAA;AACA,kCAAA,QAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,QAAA;AACA,kCAAA,KAAA,GAAA,EAAA;AACA,kCAAA,GAAA,GAAA,EAAA;AACA,8BAAA,KAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AACA,8BAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,kCAAA,QAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,8BAAA,KAAA,CAAA,CAAA,CAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,QAAA,CAAA,CAAA,CAAA;AACA,kCAAA,OAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,8BAAA,KAAA,CAAA,CAAA,CAAA,GAAA,OAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA;AACA,8BAAA,GAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,8BAAA,GAAA,GAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,8BAAA,QAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,8BAAA,GAAA,CAAA,CAAA,CAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,QAAA,CAAA,CAAA,CAAA;AACA,8BAAA,OAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,8BAAA,GAAA,CAAA,CAAA,CAAA,GAAA,OAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAfA,CAgBA;AACA;;AADA;AACA;AACA,8BAAA,IAAA,CAAA,IAAA,GACA,oCAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,GAAA,cAAA,GACA,SADA,GACA,KAAA,CAAA,CAAA,CADA,GACA,KADA,GACA,KAAA,CAAA,CAAA,CADA,GACA,OADA,GAEA,OAFA,GAEA,GAAA,CAAA,CAAA,CAFA,GAEA,KAFA,GAEA,GAAA,CAAA,CAAA,CAFA,GAEA,OAFA,GAGA,qFAHA,GAIA,QAJA,GAIA,+CALA;AAMA;AAzBA,2BAAA;AARA,yBADA;AAZA,uBAAA,EADA,CAoDA;AACA;AACA;AACA;;AAHA;AACA;AACA;AACA;AACA,sBAAA,KAAA;AACA,qBAzDA;AA0DA,mBA3DA;AA4DA,kBAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA,EAAA,CAAA,KAAA;AACA,kBAAA,WAAA;;AACA,sBAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,oBAAA,EAAA,CAAA,aAAA,CAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,OAAA,EAAA,WAAA;AACA;AACA,iBA3FA,EA4FA,KA5FA,CA4FA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,KAAA;AACA,yBAAA,EAAA;AACA,iBA/FA,CAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoGA,KAhNA;AAiNA,IAAA,SAjNA,uBAiNA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,KAAA,MAAA,EAAA,OAAA,EAAA,KAAA,KAAA;AACA,KAnNA;AAoNA,IAAA,WApNA,yBAoNA;AACA,WAAA,UAAA,GAAA,KAAA,eAAA,CAAA,KAAA,UAAA,CAAA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,KAAA,MAAA,EAAA,SAAA,EAAA,KAAA,UAAA;AACA,KAvNA;AAwNA,IAAA,cAxNA,0BAwNA,IAxNA,EAwNA,IAxNA,EAwNA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,IAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,IAAA;AAFA;AAAA,uBAGA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,4BAAA,CAHA;;AAAA;AAGA,gBAAA,KAHA;AAIA,gBAAA,IAJA,GAIA,KAAA,CAAA,MAJA;;AAAA,oBAKA,IALA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAMA,gBAAA,OANA,GAMA,SAAA,OAAA,CAAA,CAAA;AAAA,yBAAA,CAAA,GAAA,EAAA,GAAA,MAAA,CAAA,GAAA,CAAA;AAAA,iBANA;;AAOA,gBAAA,WAPA,GAOA,IAAA,IAAA,EAPA;AAQA,gBAAA,GARA,GAQA,WAAA,CAAA,WAAA,KAAA,GAAA,GAAA,OAAA,CAAA,WAAA,CAAA,QAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GACA,OAAA,CAAA,WAAA,CAAA,OAAA,EAAA,CATA;AAUA,gBAAA,GAVA,GAUA,GAAA,GAAA,GAAA,GAAA,UAVA;AAWA,gBAAA,KAXA,GAWA,IAAA,IAAA,CAAA,GAAA,CAXA;AAYA,gBAAA,GAZA,GAYA,IAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,UAAA,CAZA;AAaA,gBAAA,eAbA,GAaA,GAAA,CAAA,OAAA,KAAA,KAAA,CAAA,OAAA,EAbA,EAcA;;AACA,gBAAA,KAfA,GAeA,IAAA,CAAA,KAAA,CAAA,eAAA,IAAA,OAAA,EAAA,GAAA,EAAA,CAAA,CAfA;AAgBA,gBAAA,sBAhBA,GAgBA,eAAA,IAAA,OAAA,EAAA,GAAA,EAAA,CAhBA;AAiBA,gBAAA,OAjBA,GAiBA,IAAA,CAAA,KAAA,CAAA,sBAAA,IAAA,OAAA,EAAA,CAAA,CAjBA;AAmBA,gBAAA,IAnBA,GAmBA,IAAA,CAAA,SAAA,CAAA;AACA,kBAAA,KAAA,EAAA,IADA;AAEA,kBAAA,WAAA,EAAA,GAFA;AAGA,kBAAA,KAAA,EAAA,SAHA;AAIA,kBAAA,YAAA,EAAA,KAJA;AAKA,kBAAA,aAAA,EAAA,OALA;AAMA,kBAAA,aAAA,EAAA,MAAA,CAAA,OANA;AAOA,kBAAA,aAAA,EAAA,IAAA,KAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,EAAA,GAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAPA;AAQA,kBAAA,MAAA,EAAA,MAAA,CAAA,IAAA,KAAA,SAAA,GAAA,GAAA,GAAA,MAAA,CAAA,IARA;AASA,kBAAA,QAAA,EAAA,MAAA,CAAA,QAAA,KAAA,aAAA,GAAA,GAAA,GAAA,MAAA,CAAA;AATA,iBAAA,CAnBA;AA8BA,gBAAA,MA9BA,GA8BA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,GAAA,EAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oCAAA;AADA,mBAHA;AAMA,kBAAA,IAAA,EAAA;AANA,iBA9BA;AAAA,kDAsCA,KAAA,CAAA,MAAA,CAAA,CACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,MAAA;;AACA,kBAAA,MAAA,CAAA,QAAA;AACA,iBAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,KAAA;AACA,iBAPA,CAtCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA,KAtQA;AAuQA,IAAA,eAvQA,2BAuQA,IAvQA,EAuQA;AAAA;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,GAAA,CACA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,MAAA,EAAA,CAAA;AAAA,UAAA,KAAA,EAAA,EAAA;AAAA,UAAA,IAAA,EAAA,GAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AACA,UAAA,MAAA,EAAA,YADA;AACA,UAAA,EAAA;AAAA,+EAAA,kBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,SADA,CAAA;AAOA,OARA;AASA,aAAA,IAAA;AACA,KAlRA;AAmRA,IAAA,YAnRA,0BAmRA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,KAAA,MAAA,EAAA,WAAA,EAAA,KAAA,QAAA;AACA,KArRA;AAsRA,IAAA,IAtRA,gBAsRA,OAtRA,EAsRA,KAtRA,EAsRA;AACA,UAAA,QAAA,GAAA,KAAA,CAAA,MAAA,KAAA,CAAA,GAAA,WAAA,GAAA,EAAA;;AACA,UAAA,OAAA,KAAA,OAAA,EAAA;AACA,aAAA,OAAA,GAAA,QAAA;AACA,OAFA,MAGA;AACA,aAAA,YAAA,GAAA,QAAA;AACA;AACA,KA9RA;AA+RA,IAAA,OA/RA,mBA+RA,IA/RA,EA+RA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,IAAA,CAAA,OAAA,EAAA,KAAA,OAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,QAAA;AACA,KApSA;AAqSA,IAAA,QArSA,oBAqSA,IArSA,EAqSA,IArSA,EAqSA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA;;AACA,UAAA;AACA,YAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,QAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA;AACA,OAHA,CAGA,OAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,sBAAA;AACA;;AACA,aAAA,KAAA;AACA,KA9SA;AA+SA,IAAA,aA/SA,2BA+SA;AACA,UAAA,MAAA,GAAA,EAAA,CADA,CAEA;;AACA,UAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CACA,MAAA,CAAA,MAAA,KAAA,CAAA,GAAA,YAAA,GAAA,2BADA,EAEA,KAAA,SAAA,CACA,KAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,EAAA;AACA,SAFA,CADA,EAIA,eAJA,CAFA,CAAA;AASA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,KAAA,MAAA,EAdA,CAeA;;AACA,UAAA,KAAA,IAAA,KAAA,SAAA,EAAA;AACA,QAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CACA,MAAA,CAAA,MAAA,KAAA,CAAA,GAAA,YAAA,GAAA,2BADA,EAEA,KAAA,SAAA,CAAA,KAAA,IAAA,EAAA,QAAA,CAFA,CAAA;AAIA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,KAAA,MAAA,EAtBA,CAuBA;;AACA,UAAA,KAAA,QAAA,KAAA,aAAA,EAAA;AACA,QAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CACA,MAAA,CAAA,MAAA,KAAA,CAAA,GAAA,YAAA,GAAA,2BADA,EAEA,KAAA,SAAA,CAAA,KAAA,QAAA,EAAA,UAAA,CAFA,CAAA;AAIA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,KAAA,MAAA;AAEA,aAAA,MAAA;AACA,KAhVA;AAiVA,IAAA,SAjVA,qBAiVA,SAjVA,EAiVA,KAjVA,EAiVA;AACA,UAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA,GAAA,QAAA,GAAA,SAAA,CAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,eACA,KAAA,GACA,QADA,GAEA,SAAA,CAAA,CAAA,CAFA,GAGA,MAHA,GAIA,KAAA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CALA;AAOA;AACA,KA7VA;AA8VA,IAAA,QA9VA,sBA8VA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,GADA,GACA,MAAA,CAAA,GAAA,GAAA,MAAA,CAAA,OADA;AAEA,gBAAA,GAAA,IAAA,MAAA,MAAA,CAAA,aAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,GAAA;AACA,gBAAA,MAAA,CAAA,SAAA,GAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,CAAA,YAAA;AACA,kBAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA,WAAA,EAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,2BAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AAAA,mBAAA,CAAA;;AACA,kBAAA,MAAA,CAAA,WAAA;;AACA,kBAAA,MAAA,CAAA,SAAA;;AACA,kBAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AACA,iBALA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAzWA;AA0WA,IAAA,cA1WA,0BA0WA,MA1WA,EA0WA,SA1WA,EA0WA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,IADA,GACA,IAAA,CAAA,SAAA,CAAA;AACA,kBAAA,QAAA,EAAA,MAAA,CAAA,QADA;AAEA,kBAAA,KAAA,EAAA,MAAA,CAAA,IAFA;AAGA,kBAAA,MAAA,EAAA,MAAA,CAAA,IAHA;AAIA,kBAAA,aAAA,EAAA,MAAA,CAAA,MAJA;AAKA,kBAAA,aAAA,EAAA,MAAA,CAAA,QALA;AAMA,kBAAA,KAAA,EAAA,MAAA,CAAA,QAAA,KAAA,EAAA,GAAA,SAAA,GAAA,MAAA,CAAA;AANA,iBAAA,CADA;AASA,gBAAA,EATA,GASA,MATA;AAUA,gBAAA,MAVA,GAUA;AACA,kBAAA,MAAA,EAAA,KADA;AAEA,kBAAA,GAAA,EAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oCAAA;AADA,mBAHA;AAMA,kBAAA,IAAA,EAAA;AANA,iBAVA;AAAA,mDAkBA,KAAA,CAAA,MAAA,CAAA,CACA,IADA,CACA,YAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA,SAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,MAAA;AACA,kBAAA,SAAA,CAAA,MAAA,CAAA,MAAA;AACA,kBAAA,EAAA,CAAA,QAAA;AACA,iBANA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,2BAAA,EAAA,KAAA;AACA,iBATA,CAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAtYA,GA9OA;AAsnBA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,SAAA,WAAA,GAAA,IAAA,CAAA,YAAA;AACA,MAAA,OAAA,CAAA,aAAA,GAAA,IAAA,CAAA,YAAA;AACA,QAAA,OAAA,CAAA,YAAA;;AACA,QAAA,OAAA,CAAA,WAAA;;AACA,QAAA,OAAA,CAAA,SAAA;;AACA,QAAA,OAAA,CAAA,YAAA;;AACA,QAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,MAAA,CAAA,gBAAA,GAAA,EAAA;AACA,OAPA;AAQA,KATA;AAUA;AAjoBA,CAAA","sourcesContent":["<template>\n  <section class=\"main_kanban_daypilot\">\n    <b-loading\n      :is-full-page=\"isFullPage\"\n      v-model=\"isLoading\"\n      :can-cancel=\"true\">\n    </b-loading>\n    <div class=\"column is-12\">\n      <div class=\"columns multiline px-6 py-2\">\n        <div class=\"column is-12-touch \">\n          <div class=\"columns is-vcentered is-justify-content-flex-start is-left has-text-left is-desktop\">\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label is-flex-tablet-only is-justify-content-space-between pt-2\">\n                  Rubrique <span class=\"is-hidden-desktop\">&nbsp;</span> : &nbsp;\n                </label>\n                <div class=\"control is-flex-grow-2\">\n                  <div class=\"dropdown is-block is-fullwidth\" v-bind:class=\"showingItems\">\n                    <div class=\"dropdown-trigger\">\n                      <button class=\"button is-fullwidth is-justify-content-space-between\" aria-haspopup=\"true\" \n                              aria-controls=\"dropdown-menu\" @click=\"show('items',showingItems)\">\n                        <span class=\"icon-text\">\n                          <span>{{itemSelected.rubrique}}</span>\n                        </span>\n                        <span class=\"icon is-small\">\n                          <span class=\"fas fa-angle-down\" aria-hidden=\"true\"></span>\n                        </span>\n                      </button>\n                    </div>\n                    <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                      <div class=\"dropdown-content\">\n                        <a class=\"dropdown-item\" v-for=\"(item, i) in itemsList\" :key=\"i\" :value=\"item.rubrique\" \n                            @click=\"getItemColumns(item)\">\n                          <span class=\"icon-text\">\n                            <span>{{ item.rubrique }}</span>\n                          </span>\n                        </a>\n                        <hr class=\"dropdown-divider\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label is-flex-tablet-only is-justify-content-space-between pt-2\">\n                  Affichage <span class=\"is-hidden-desktop\">&nbsp;</span> : &nbsp;\n                </label>\n                <div class=\"control is-flex-grow-2\">\n                  <div class=\"dropdown is-block is-fullwidth\" v-bind:class=\"showing\">\n                    <div class=\"dropdown-trigger\">\n                      <button class=\"button is-fullwidth is-justify-content-space-between\" aria-haspopup=\"true\" \n                              aria-controls=\"dropdown-menu\" @click=\"show('users',showing)\">\n                        <span class=\"icon-text\">\n                          <span class=\"icon\">\n                            <span class=\"fas fa-circle\" v-bind:style=\"{ color: typeview.color }\"></span>\n                          </span>\n                          <span>{{typeview.title}}</span>\n                        </span>\n                        <span class=\"icon is-small\">\n                          <span class=\"fas fa-angle-down\" aria-hidden=\"true\"></span>\n                        </span>\n                      </button>\n                    </div>\n                    <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n                      <div class=\"dropdown-content\">\n                        <a class=\"dropdown-item\" v-for=\"(item, i) in arrayFilter\" :key=\"i\" :value=\"item.title\" \n                            @click=\"setView(item)\">\n                          <span class=\"icon-text is-flex is-flex-wrap-nowrap\">\n                            <span class=\"icon\" v-bind:style=\"{ color: item.color }\">\n                              <span class=\"fas fa-circle\"></span>\n                            </span>\n                            <span>{{ item.title }}</span>\n                          </span>\n                        </a>\n                        <hr class=\"dropdown-divider\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"column is-narrow\">\n              <div class=\"field is-horizontal\">\n                <label class=\"label is-flex-tablet-only is-justify-content-space-between pt-2\">\n                  Utilisateur <span class=\"is-hidden-desktop\">&nbsp;</span> : &nbsp;\n                </label>\n                <div class=\"control is-flex-grow-2\">\n                  <div class=\"select is-block\">\n                    <Multiselect\n                    v-model=\"user\" :options=\"allUsers\" :multiple=\"true\"\n                    :close-on-select=\"false\" :clear-on-select=\"false\"\n                    :preserve-search=\"true\"\n                    placeholder=\"Selectionnez\" label=\"name\" \n                    track-by=\"name\" :preselect-first=\"true\"\n                    @close=\"onFilter\">\n                    <template\n                      slot=\"selection\"\n                      slot-scope=\"{ values, isOpen }\">\n                      <span class=\"multiselect__single\" v-if=\"values.length &amp;&amp; !isOpen\">\n                        {{ values.length }} selections\n                      </span>\n                    </template>\n                  </Multiselect>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <DayPilotKanban id=\"dp\" :config=\"config\" ref=\"kanban\" />\n  </section>\n</template>\n  \n<script>\n  import { DayPilotKanban, DayPilot } from \"daypilot-pro-vue\";\n  import Vue from \"vue\";\n  import Multiselect from \"vue-multiselect\";\n  // import \"vue-multiselect/dist/vue-multiselect.min.css\";\n  import axios from \"axios\";\n  \n  export default {\n    name: \"SchedulerKanban\",\n    props: {\n      API_KEY: {\n        type: String,\n        default() {\n          return \"\";\n        },\n      },\n      ID_USER: {\n        type: String,\n        default() {\n          return 1;\n        },\n      },\n      URI: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interactions/\";\n        },\n      },\n      URI_ACTION: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/interaction/\";\n        },\n      },\n      URI_ITEMS: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/actionrubriques/\";\n        },\n      },\n      URI_ACTIONTYPES: {\n        type: String,\n        default() {\n          return \"https://0002-zebridge-dev-externe.api.crm-simple.com/actiontypes/\";\n        },\n      },\n      idUtilisateurs: {\n        type: Array,\n        default() {\n          return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n        },\n      },\n    },\n    data: function () {\n      return {\n        isFullPage: false,\n        isLoading: true,\n        itemSelected : {},\n        user : [],\n        lock : \"alllock\",\n        type : \"alltype\",\n        priority : \"allpriority\",\n        steps: [],\n        allUsers: [],\n        tasks: [],\n        showing: \"\",\n        showingItems: \"\",\n        typeview:{\n          title : \"Selectionnez\", \n          color: \"#2251ff\",\n          index: \"color_defaut\",\n        },\n        itemsList : [],\n        columnList : [],\n        arrayFilter : [\n            {\n              color: \"#2251ff\",\n              title: \"Défaut\",\n              index: \"color_defaut\",\n            },\n            {\n              color: \"#F54D40\",\n              title: \"Etat\",\n              index: \"color_etat\",\n            },\n            {\n              color: \"#25ffcd\",\n              title: \"Priorité\",\n              index: \"color_priorite\",\n            },\n            {\n              color: \"#de452a\",\n              title: \"Utilisateur\",\n              index: \"color_utilisateur\",\n            },\n            {\n              color: \"#cdee00\",\n              title: \"Type\",\n              index: \"color_type\",\n            },\n            {\n              color: \"#e19400\",\n              title: \"Priorité échéance\",\n              index: \"color_priorite_echeance\",\n            },\n        ],\n        config: {\n          columnWidthSpec: \"Auto\",\n          swimlaneMoveHandling: \"Disabled\",\n          eventHoverHandling: \"Bubble\",\n          // onSwimlaneMoved: (args) => {\n          //   args.control.message(\"Swimlane moved: \" + args.swimlane.data.name);\n          // },\n          cardDeleteHandling: \"Disabled\",\n          cardMoveHandling: \"Enabled\",\n          onCardMoved: (args) => {\n            console.log(\"args\", args);\n            this.updateCalendar(args.card.data, args.card.control.cards)\n            // args.control.message(\"Card moved: \" + args.card.data.name);\n          },\n          onBeforeCellRender : (args) => {\n            if(args.cell.swimlane.data.id === this.ID_USER){\n              args.cell.areas =[ {\n                right: 5,\n                bottom: 5,\n                width: 100,\n                height: 30,\n                html: \"Ajouter\",\n                cssClass: \"add-button\",\n                action: \"JavaScript\", js: async(args)=> {\n                  console.log(\"ON BUTTON \", args);\n                  this.createNewTasks(args,\"add-button\");\n                }\n              }]\n            }\n          },\n          cardRightClickHandling: \"Disabled\",\n          onCardClick: async (args) => {\n            console.log(\"CARDS : \", args);\n            if((args.card.data.lock!==\"1\") && (args.card.data.swimlane===this.ID_USER)){\n              const modal = await DayPilot.Modal.prompt(\n                \"Modifier le titre de la tâche: \",args.card.data.text\n              );\n              let name=modal.result;\n              if (!name) {return;}\n              args.card.data.text = modal.result;\n              this.updateCalendar(args.card.data, args.card.control.cards)\n            }\n          },\n          // contextMenuCard: new DayPilot.Menu({\n          //   items: [\n          //     {\n          //       text: \"Verrouiller la tâche\",\n          //       icon: \"fas fa-lock\",\n          //       onClick: (args) => {\n          //         let e = args.source;\n          //         e.data.lock = \"1\";\n          //         e.data.areas[0].icon = \"fas fa-lock\";\n          //         console.log(\"LOCKED : \", e.data);\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //     {\n          //       text: \"Supprimer\",\n          //       icon: \"fas fa-trash\",\n          //       onClick: (args) => {\n          //         const dp = args.source.control;\n          //         let idaction = args.source.data.idaction;\n          //         let config = {\n          //           method: \"delete\",\n          //           url: this.URI_ACTION + this.API_KEY + \"/\" + idaction,\n          //           headers: {},\n          //         };\n          //         axios(config)\n          //           .then(function () {\n          //             dp.cards.remove(args.source);\n          //           })\n          //           .catch(function (error) {\n          //             console.log(\"Error ON DELETE : \", error);\n          //           });\n          //       },\n          //     },\n          //     {\n          //       text: \"Private\",\n          //       icon: \"icon icon-private\",\n          //       color: \"#9e5fff\",\n          //       onClick: (args) => {\n          //         let e = args.source;\n          //         e.data.barColor = \"#9e5fff\";\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //     {\n          //       text: \"Company\",\n          //       icon: \"icon icon-company\",\n          //       color: \"#00a9ff\",\n          //       onClick:  (args) => {\n          //         let e = args.source;\n          //         e.data.barColor = \"#00a9ff\";\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //     {\n          //       text: \"DéVerrouiller la tâche\",\n          //       icon: \"fas fa-lock-open\",\n          //       onClick: (args) => {\n          //         let e = args.source;\n          //         e.data.lock = \"0\";\n          //         e.data.areas[0].icon = \"fas fa-chevron-down\";\n          //         console.log(\"LOCKED : \", e.data);\n          //         this.updateCalendar(e.data,e.control.cards);\n          //       },\n          //     },\n          //   ],\n          //   onShow: function (args) {\n          //     if (parseInt(args.source.data.lock) === 1) {\n          //       args.menu.items[0].hidden = true;\n          //       args.menu.items[4].hidden = false;\n          //       args.menu.items.forEach(element => {\n          //         element.disabled = true;\n          //       });\n          //       args.menu.items[4].disabled = false;\n          //     } \n          //     else {\n          //       args.menu.items[0].hidden = false;\n          //       args.menu.items.forEach(element => {\n          //         element.disabled = false;\n          //       });\n          //       args.menu.items[4].hidden = true;\n          //     }\n          //   },\n          // }),\n        },\n      };\n    },\n    components: {\n      DayPilotKanban,\n      Multiselect\n    },\n    computed: {\n      // DayPilot.Kanban object - https://api.daypilot.org/daypilot-kanban-class/\n      kanban: function () {\n        return this.$refs.kanban.control;\n      },\n    },\n    methods: {\n      async getAllUsers(nombre_page=0) {\n        let vm = this;\n        return axios({\n          method: \"get\",\n          url: \"https://0002-zebridge-dev-externe.api.crm-simple.com/utilisateurs/\"+ this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then(function (response) {\n            let allUsers = response.data.data;\n            console.log(\"USERS : \", response);\n            // console.log(\"ID USER: \", vm.ID_USER);\n            allUsers.forEach(element => {\n              vm.allUsers.push({\n                name: element.nom_utilisateur.value,\n                id: element.idutilisateur.value,\n              });\n            });\n            vm.user = vm.allUsers.filter((x) => x.id in vm.idUtilisateurs );\n            nombre_page++;\n            if (nombre_page >= response.data.nbpage) {\n              this.getAllUsers(nombre_page);\n            }\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET ALL USERS: \", error);\n            return [];\n          });\n      },\n      compare( a, b ) {\n        if ( a.rubrique < b.rubrique ){\n          return -1;\n        }\n        if ( a.rubrique > b.rubrique ){\n          return 1;\n        }\n        return 0;\n      },\n      async getItemsList(nombre_page=0) {\n        return axios({\n          method: \"get\",\n          url: this.URI_ITEMS+ this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((response) => {\n            let items = response.data.data;\n            items.forEach(element => {\n              this.itemsList.push({\n                id : element.idrubrique, \n                rubrique : element.rubrique, \n              });\n            });\n            nombre_page++;\n            if(nombre_page < response.data.nbpage){\n              this.getItemsList(nombre_page);\n            }\n            else{\n              this.itemsList.sort( this.compare );\n              this.getItemColumns(this.itemsList[0]);\n            }\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET ALL ITEMS: \", error);\n            return [];\n          });\n      },\n      async getItemColumns(item,nombre_page=0) {\n        this.isLoading=true;\n        this.itemSelected = item;\n        this.columnList=[];\n        let id = item.id\n        console.log(\"Id :\", id);\n        return axios({\n          method: \"get\",\n          url: this.URI_ACTIONTYPES+this.API_KEY+\"/condition:idrubrique:egal:\"+id,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((response) => {\n            let data = response.data.data;\n            console.log(\"RESPONSE COLUMN A : \", response)\n            // let newColumns = [];\n            data.forEach(element => {\n              this.columnList.push({\n                id : element.idaction_type, \n                name : element.action_type, \n              });\n            });\n            nombre_page++;\n            console.log(\"COLUMN LIST\", this.columnList);\n            nombre_page >= response.data.nbpage ? this.showingItems=\"\": this.getItemColumns(item,nombre_page);\n            this.isLoading=false;\n            this.columnList=this.addCreateButton(this.columnList);\n            this.kanban.columns.list = this.columnList;\n            Vue.set(this.config, \"columns\", this.columnList);\n            this.loadSwimlane();\n            this.loadCards();\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET ALL ACTIONS TYPE: \", error);\n            return [];\n          });\n      },\n      async getKanbanItem(url=this.URI + this.API_KEY, nombre_page=0) {\n        let vm = this;\n        vm.tasks= nombre_page===0 ? [] : vm.tasks;\n        console.log(\"nombre_page \", nombre_page);\n        return axios({\n          method: \"get\",\n          url: url+\"/\"+nombre_page,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then(function (response) {\n            let tasks = response.data.data;\n            console.log(\"TASK 1.0 \", response);\n            let index = vm.tasks.length+1;\n            let groupBy = function (xs) {\n              return xs.reduce(function (rv, x) {\n                (rv[x.idutilisateur.value] =\n                  rv[x.idutilisateur.value] || []).push(x);\n                return rv;\n              }, {});\n            };\n            let taskByID = groupBy(tasks);\n            let newEvents = [];\n            for (const [key] of Object.entries(taskByID)) {\n              newEvents.push({\n                id: `${key}`,\n                tasks: taskByID[`${key}`],\n              });\n            }\n            newEvents.forEach((element) => {\n              element.tasks.forEach((task) => {\n                vm.tasks.push({\n                  idaction: task.idaction.value,\n                  id: index,\n                  name: \"\",\n                  text: task.sujet.value,\n                  swimlane: element.id,\n                  start: task.date_action.value,\n                  end: task.date_fin.value,\n                  column: task.idtype_action.value,\n                  lock: task.e_lock.value,\n                  barColor:vm.setColor(vm.typeview, task),\n                  priority :task.priorite.value,\n                  areas: [\n                    {\n                      right: 0,\n                      top: 6,\n                      width: 20,\n                      height: 20,\n                      icon: \"fas fa-info-circle\",\n                      style: \"text-align:center; color:#2251ff\",\n                      action :\"Bubble\",\n                      bubble: new DayPilot.Bubble({\n                        onLoad: (args) => {\n                          let idaction = args.source.data.card.idaction;\n                          let start = \"\";\n                          let end = \"\";\n                          start = args.source.data.card.start;\n                          start = start.split(\" \");\n                          let new_date = start[0].split(\"-\");\n                          start[0] = new_date[2] + \"-\" + new_date[1] + \"-\" + new_date[0];\n                          var new_end = start[1].split(\":\");\n                          start[1] = new_end[0] + \":\" + new_end[1];\n                          end = args.source.data.card.end;\n                          end = end.split(\" \");\n                          new_date = end[0].split(\"-\");\n                          end[0] = new_date[2] + \"-\" + new_date[1] + \"-\" + new_date[0];\n                          new_end = end[1].split(\":\");\n                          end[1] = new_end[0] + \":\" + new_end[1];\n                          // if event object doesn't specify \"bubbleHtml\" property\n                          // this onLoad handler will be called to provide the bubble HTML\n                          args.html =\n                            \"<span style='font-weight: 900'>\" +args.source.data.card.text +\"</span></br>\" +\n                            \"Début: \" +start[0] +\" à \" +start[1] +\"</br>\" +\n                            \"Fin: \" +end[0] +\" à \" + end[1] +\"</br>\" +\n                            \"<a href='https://0002-zebridge-dev-externe.crm-simple.com/action_edit.php?idaction=\" +\n                            idaction +\"'target='_blank'rel='noopener' >Voir plus</a>\";\n                        },\n                      }),\n                    },\n                  ],\n                });\n                //CHANGE ICON FOr  LOCKED EVENTS\n                // if (parseInt(vm.tasks[index-1].lock) === 1) {\n                //   vm.tasks[index-1].areas[0].icon =\"fas fa-lock\";\n                // }\n                index++;\n              });\n            });\n            console.log(\"TASKS 2.0 : \", vm.tasks);\n            nombre_page++;\n            if(nombre_page < response.data.nbpage){\n              vm.getKanbanItem(vm.URI + vm.API_KEY,nombre_page);\n            }\n          })\n          .catch(function (error) {\n            console.log(\"Error ON GET: \", error);\n            return [];\n          });\n      },\n      loadCards() {\n        Vue.set(this.config, \"cards\", this.tasks);\n      },\n      loadColumns() {\n        this.columnList = this.addCreateButton(this.columnList);\n        Vue.set(this.config, \"columns\", this.columnList);\n      },\n      async createNewTasks(args, type){\n        console.log(\"RUN THROUGH\", type);\n        console.log(\"args COLUMN :\", args);\n        const modal = await DayPilot.Modal.prompt(\"Créer une nouvelle tâche: \",);\n        let name=modal.result;\n        if (!name) {return;}\n        const addZero = (i) => i < 10 ? \"0\" + i :  i;\n        let currentdate = new Date();\n        let day = currentdate.getFullYear() + \"-\"  + addZero((currentdate.getMonth()+1))  + \"-\"\n                  + addZero(currentdate.getDate());\n        let tab = day +\" \"  + \"00:00:00\";\n        let start = new Date(tab);\n        let end = new Date(day +\" \"  + \"23:59:59\");\n        const time_difference = end.getTime() - start.getTime();\n        //calculate days difference by dividing total milliseconds in a day\n        const hours = Math.floor(time_difference / (1000 * 60 * 60));\n        const remaining_milliseconds = time_difference % (1000 * 60 * 60);\n        const minutes = Math.floor(remaining_milliseconds / (1000 * 60));\n\n        let data = JSON.stringify({\n          sujet: name,\n          date_action: tab,\n          color: \"#9e5fff\",\n          duree_heures: hours,\n          duree_minutes: minutes,\n          idutilisateur: this.ID_USER,\n          idtype_action :type === \"column\" ? args.data.id : args.column.data.id,\n          e_lock: this.lock === \"alllock\" ? \"0\" : this.lock,\n          priorite : this.priority === \"allpriority\" ? \"0\" : this.priority,\n        });\n        let config = {\n          method: \"post\",\n          url: this.URI_ACTION + this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n        return axios(config)\n          .then((result) => {\n            console.log(\"DONT WORRY IM FINE\", result);\n            this.onFilter();\n          })\n          .catch(function (error) {\n            console.log(\"Error ON POST: \", error);\n          });\n      },\n      addCreateButton(data) {\n        data.forEach(element => {\n          element.areas= [ \n              { right: 0, top: 0, bottom: 0, width: 18, html : \"+\", cssClass: \"add-button\", \n                action: \"JavaScript\", js: async(args) =>{ \n                  this.createNewTasks(args,\"column\");\n                }\n              } \n            ]\n        });\n        return data;\n      },\n      loadSwimlane() {\n        Vue.set(this.config, \"swimlanes\", this.allUsers);\n      },\n      show(element,value) {\n        const newValue = value.length === 0 ? \"is-active\" : \"\";\n        if(element === \"users\"){\n          (this.showing = newValue)\n        }\n        else{\n          (this.showingItems = newValue);\n        }\n      },\n      setView(item){\n        this.typeview = item;\n        this.show(\"users\",this.showing);\n        this.isLoading = true;\n        this.onFilter();\n      },\n       setColor(type, data) {\n        let  color = type.color;\n        try {\n          const jsondata = data.color.value;\n          color = JSON.parse(jsondata)[type.index];\n        } catch (error) {\n          console.log(\"undefined color data\");\n        }\n        return color;\n      },\n      getQueryParam() {\n        let filter = \"\";\n        // filtering users\n        if (this.user.length > 0) {\n          filter = filter.concat(\n            filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n            this.setfilter(\n              this.user.map((e) => {\n                return e.id;\n              }),\n              \"idutilisateur\"\n            )\n          );\n        }\n        console.log(\"UTILISATEUR / \", this.filter);\n        // e_lock\n        if (this.lock !== \"alllock\") {\n          filter = filter.concat(\n            filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n            this.setfilter(this.lock, \"e_lock\")\n          );\n        }\n        console.log(\"LOCK / \", this.filter);\n        // priorite\n        if (this.priority !== \"allpriority\") {\n          filter = filter.concat(\n            filter.length === 0 ? \"condition:\" : \":separator:AND:condition:\",\n            this.setfilter(this.priority, \"priorite\")\n          );\n        }\n        console.log(\"PRIO / \", this.filter);\n\n        return filter;\n      },\n      setfilter(listArray, param) {\n        if (listArray.length === 1) {\n          return param + \":egal:\" + listArray[0];\n        } else {\n          return (\n            param +\n            \":egal:\" +\n            listArray[0] +\n            \":OR:\" +\n            this.setfilter(listArray.slice(1), param)\n          );\n        }\n      },\n      async onFilter(){\n        let url = this.URI+ this.API_KEY;\n        url+=\"/\"+this.getQueryParam();\n        console.log(\"FILTER URL IS : \",url);\n        this.isLoading=true;\n        this.getKanbanItem(url).then(()=>{\n          Vue.set(this.config, \"swimlanes\", this.allUsers.filter((x) => this.user.includes(x) ));\n          this.loadColumns();\n          this.loadCards();\n          this.isLoading=false;\n        });\n      },\n      async updateCalendar(events,allEvents) {\n        let data = JSON.stringify({\n          idaction: events.idaction,\n          sujet: events.text,\n          e_lock: events.lock,\n          idtype_action :events.column,\n          idutilisateur: events.swimlane,\n          color: events.barColor === \"\" ? \"#9e5fff\" : events.barColor,\n        });\n        let vm= this;\n        let config = {\n          method: \"put\",\n          url: this.URI_ACTION + this.API_KEY,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          data: data,\n        };\n        return axios(config)\n          .then(function () {\n            console.log(\"AllEvents : \", allEvents);\n            console.log(\"events : \", events);\n            allEvents.update(events);\n            vm.onFilter();\n          })\n          .catch(function (error) {\n            console.log(\"UPDATE API DATAS ERROR : \",error);\n          });\n      },\n    },\n    mounted: function () {\n      this.getAllUsers().then(() =>{\n        this.getKanbanItem().then(() => {\n          this.loadSwimlane();\n          this.loadColumns();\n          this.loadCards();\n          this.getItemsList();\n          this.isLoading = false;\n          this.kanban.cellMarginBottom=40;\n        });\n      });\n    },\n  };\n</script>\n<style>\n  .main_kanban_daypilot {\n    margin-bottom: 20px;\n  }\n  .add-button {\n      cursor: pointer;\n      border: 1px solid #ccc;\n      background-color: #eee;\n      color: #666;\n      text-align: center;\n      line-height: 30px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n  }\n  .add-button:hover {\n      background-color: #ddd;\n  }\n</style>"],"sourceRoot":"src/components"}]}